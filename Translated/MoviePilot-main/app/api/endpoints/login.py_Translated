"@router.post("/access-token", summary="获取token", response_model=schemas.Token)": "@router.post("/access-token", summary="Get token", response_model=schemas.Token)"
"获取认证Token": "Get certification Token"
"# 检查数据库": "#  Checking the database"
"# 请求协助认证": "#  Request for assistance with accreditation"
"logger.warn("登录用户本地不匹配，尝试辅助认证 ...")": "logger.warn(" Login user local mismatch， Attempted assisted authentication ...")"
"raise HTTPException(status_code=401, detail="用户名或密码不正确")": "raise HTTPException(status_code=401, detail=" Incorrect username or password")"
"logger.info(f"辅助认证成功，用户信息: {token}")": "logger.info(f" Assisted certification success， User information: {token}")"
"# 加入用户信息表": "#  Add user information sheet"
"logger.info(f"用户不存在，创建用户: {form_data.username}")": "logger.info(f" The user does not exist， Create user: {form_data.username}")"
"raise HTTPException(status_code=403, detail="用户未启用")": "raise HTTPException(status_code=403, detail=" User not enabled")"
"@router.get("/bing", summary="Bing每日壁纸", response_model=schemas.Response)": "@router.get("/bing", summary="Bing daily wallpaper", response_model=schemas.Response)"
"获取Bing每日壁纸": "Get the Bing daily wallpaper"
"@router.get("/tmdb", summary="TMDB电影海报", response_model=schemas.Response)": "@router.get("/tmdb", summary="TMDB Movie poster", response_model=schemas.Response)"
"获取TMDB电影海报": "Get TMDB movie poster"
