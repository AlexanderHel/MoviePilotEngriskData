"@router.get("/", summary="所有站点", response_model=List[schemas.Site])": "@router.get("/", summary=" All sites", response_model=List[schemas.Site])"
"获取站点列表": "Get site list"
"@router.post("/", summary="新增站点", response_model=schemas.Response)": "@router.post("/", summary=" New sites", response_model=schemas.Response)"
"新增站点": "New sites"
"return schemas.Response(success=False, message="站点地址不能为空")": "return schemas.Response(success=False, message=" Site address cannot be empty")"
"return schemas.Response(success=False, message="该站点不支持")": "return schemas.Response(success=False, message=" This site does not support")"
"return schemas.Response(success=False, message=f"{domain} 站点己存在")": "return schemas.Response(success=False, message=f"{domain}  Site exists")"
"# 保存站点信息": "#  Save site information"
"@router.put("/", summary="更新站点", response_model=schemas.Response)": "@router.put("/", summary=" Updating the site", response_model=schemas.Response)"
"更新站点信息": "Update site information"
"return schemas.Response(success=False, message="站点不存在")": "return schemas.Response(success=False, message=" Site does not exist")"
"@router.delete("/{site_id}", summary="删除站点", response_model=schemas.Response)": "@router.delete("/{site_id}", summary=" Delete site", response_model=schemas.Response)"
"删除站点": "Delete site"
"# 插件站点删除": "#  Plugin site removal"
"@router.get("/cookiecloud", summary="CookieCloud同步", response_model=schemas.Response)": "@router.get("/cookiecloud", summary="CookieCloud Synchronization", response_model=schemas.Response)"
"运行CookieCloud同步站点信息": "(of a computer) runCookieCloud Synchronize site information"
"return schemas.Response(success=True, message="CookieCloud同步任务已启动！")": "return schemas.Response(success=True, message="CookieCloud Synchronization task started！")"
"@router.get("/reset", summary="重置站点", response_model=schemas.Response)": "@router.get("/reset", summary=" Reset site", response_model=schemas.Response)"
"清空所有站点数据并重新同步CookieCloud站点信息": "Empty all site data and resynchronizeCookieCloud Site information"
"# 启动定时服务": "#  Start timing service"
"# 插件站点删除": "#  Plugin site removal"
"return schemas.Response(success=True, message="站点已重置！")": "return schemas.Response(success=True, message=" Site has been reset！")"
"@router.get("/cookie/{site_id}", summary="更新站点Cookie&UA", response_model=schemas.Response)": "@router.get("/cookie/{site_id}", summary=" Updating the siteCookie&UA", response_model=schemas.Response)"
"使用用户密码更新站点Cookie": "Updating the site with user passwordsCookie"
"# 查询站点": "#  Search site"
"detail=f"站点 {site_id} 不存在！",": "detail=f" Website {site_id}  Non-existent！","
"# 更新Cookie": "#  UpdateCookie"
"@router.get("/test/{site_id}", summary="连接测试", response_model=schemas.Response)": "@router.get("/test/{site_id}", summary=" Connection test", response_model=schemas.Response)"
"测试站点是否可用": "Test site availability"
"detail=f"站点 {site_id} 不存在",": "detail=f" Website {site_id}  Non-existent","
"@router.get("/icon/{site_id}", summary="站点图标", response_model=schemas.Response)": "@router.get("/icon/{site_id}", summary=" Site icon", response_model=schemas.Response)"
"获取站点图标：base64或者url": "Get site icon：base64 Orurl"
"detail=f"站点 {site_id} 不存在",": "detail=f" Website {site_id}  Non-existent","
"return schemas.Response(success=False, message="站点图标不存在！")": "return schemas.Response(success=False, message=" Site icon does not exist！")"
"@router.get("/resource/{site_id}", summary="站点资源", response_model=List[schemas.TorrentInfo])": "@router.get("/resource/{site_id}", summary=" Site resources", response_model=List[schemas.TorrentInfo])"
"浏览站点资源": "Browse site resources"
"detail=f"站点 {site_id} 不存在",": "detail=f" Website {site_id}  Non-existent","
"@router.get("/domain/{site_url}", summary="站点详情", response_model=schemas.Site)": "@router.get("/domain/{site_url}", summary=" Site details", response_model=schemas.Site)"
"通过域名获取站点信息": "Get site information by domain name"
"detail=f"站点 {domain} 不存在",": "detail=f" Website {domain}  Non-existent","
"@router.get("/rss", summary="所有订阅站点", response_model=List[schemas.Site])": "@router.get("/rss", summary=" All subscription sites", response_model=List[schemas.Site])"
"获取站点列表": "Get site list"
"# 选中的rss站点": "#  Selectedrss Website"
"# 所有站点": "#  All sites"
"# 选中的rss站点": "#  Selectedrss Website"
"@router.get("/{site_id}", summary="站点详情", response_model=schemas.Site)": "@router.get("/{site_id}", summary=" Site details", response_model=schemas.Site)"
"通过ID获取站点信息": "Pass (a bill or inspection etc)ID Get site information"
"detail=f"站点 {site_id} 不存在",": "detail=f" Website {site_id}  Non-existent","
