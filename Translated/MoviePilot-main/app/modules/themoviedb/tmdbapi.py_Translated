"TMDB识别匹配": "TMDB Recognition match"
"# TMDB主体": "# TMDB Main part"
"# 域名": "#  Domain name"
"# 开启缓存": "#  Enable cache"
"# 缓存大小": "#  Cache size"
"# 语种": "#  Language type (in a classification)"
"# 代理": "#  Act on behalf of sb. in a responsible position"
"# 调试模式": "#  Debug mode"
"# TMDB查询对象": "# TMDB Query subject"
"同时查询模糊匹配的电影、电视剧TMDB信息": "Simultaneous query for fuzzy matched movies、 DramasTMDB Text"
"查询模糊匹配的所有电影TMDB信息": "Query all movies with fuzzy matchesTMDB Text"
"查询模糊匹配的所有电视剧TMDB信息": "Query all tv series with fuzzy matchesTMDB Text"
"比较文件名是否匹配，忽略大小写和特殊字符": "Compare file name matches， Ignore case and special characters"
":param file_name: 识别的文件名或者种子名": ":param file_name:  Recognized file name or seed name"
":param tmdb_names: TMDB返回的译名": ":param tmdb_names: TMDB Translations returned"
"搜索tmdb中所有的标题和译名，用于名称匹配": "Look for sth.tmdb All titles and translations in， For name matching"
":param tmdb_info: TMDB信息": ":param tmdb_info: TMDB Text"
":return: 所有译名的清单": ":return:  List of all translations"
"搜索tmdb中的媒体信息，匹配返回一条尽可能正确的信息": "Look for sth.tmdb Media information in， The match returns a message that is as correct as possible"
":param name: 剑索的名称": ":param name:  The name of the fencing rope"
":param mtype: 类型：电影、电视剧": ":param mtype:  Typology： Cinematic、 Dramas"
":param year: 年份，如要是季集需要是首播年份(first_air_date)": ":param year:  Particular year， If it's a seasonal episode, it needs to be the year it premiered.(first_air_date)"
":param season_year: 当前季集年份": ":param season_year:  Current season episode year"
":param season_number: 季集，整数": ":param season_number:  End of a season， Integer (math.)"
":return: TMDB的INFO，同时会将mtype赋值到media_type中": ":return: TMDB (used form a nominal expression)INFO， At the same time, it willmtype Assign tomedia_type Center"
"# TMDB搜索": "# TMDB Look for sth."
"f"正在识别{mtype.value}：{name}, 年份={year} ...")": "f" Recognition in progress{mtype.value}：{name},  Particular year={year} ...")"
"# 有当前季和当前季集年份，使用精确匹配": "#  Current season and current episode year available， Using exact match"
"f"正在识别{mtype.value}：{name}, 季集={season_number}, 季集年份={season_year} ...")": "f" Recognition in progress{mtype.value}：{name},  End of a season={season_number},  Season set year={season_year} ...")"
"f"正在识别{mtype.value}：{name}, 年份={year} ...")": "f" Recognition in progress{mtype.value}：{name},  Particular year={year} ...")"
"# 返回": "#  Come (or go) back"
"根据名称查询电影TMDB匹配": "Search for movies by nameTMDB Match"
":param name: 识别的文件名或种子名": ":param name:  Recognized file name or seed name"
":param year: 电影上映日期": ":param year:  Movie release date"
":return: 匹配的媒体信息": ":return:  Matching media messages"
"logger.error(f"连接TMDB出错：{err}")": "logger.error(f" GroutTMDB Make a mistake：{err}")"
"logger.error(f"连接TMDB出错：{e}")": "logger.error(f" GroutTMDB Make a mistake：{e}")"
"logger.debug(f"API返回：{str(self.search.total_results)}")": "logger.debug(f"API Come (or go) back：{str(self.search.total_results)}")"
"logger.debug(f"{name} 未找到相关电影信息!")": "logger.debug(f"{name}  No relevant movie information found!")"
"# 按年份降序排列": "#  Sort by year in descending order"
"# 年份": "#  Particular year"
"# 年份不匹配": "#  Year mismatch"
"# 匹配标题、原标题": "#  Match title、 Original title"
"# 匹配别名、译名": "#  Match alias、 Translated names"
"根据名称查询电视剧TMDB匹配": "Search tv series by nameTMDB Match"
":param name: 识别的文件名或者种子名": ":param name:  Recognized file name or seed name"
":param year: 电视剧的首播年份": ":param year:  Year of premiere of the tv series"
":return: 匹配的媒体信息": ":return:  Matching media messages"
"logger.error(f"连接TMDB出错：{err}")": "logger.error(f" GroutTMDB Make a mistake：{err}")"
"logger.error(f"连接TMDB出错：{e}")": "logger.error(f" GroutTMDB Make a mistake：{e}")"
"logger.debug(f"API返回：{str(self.search.total_results)}")": "logger.debug(f"API Come (or go) back：{str(self.search.total_results)}")"
"logger.debug(f"{name} 未找到相关剧集信息!")": "logger.debug(f"{name}  No relevant episode information found!")"
"# 按年份降序排列": "#  Sort by year in descending order"
"# 年份不匹配": "#  Year mismatch"
"# 匹配标题、原标题": "#  Match title、 Original title"
"# 匹配别名、译名": "#  Match alias、 Translated names"
"根据电视剧的名称和季的年份及序号匹配TMDB": "Match the name of the tv series with the year and serial number of the seasonTMDB"
":param name: 识别的文件名或者种子名": ":param name:  Recognized file name or seed name"
":param season_year: 季的年份": ":param season_year:  Year of the season"
":param season_number: 季序号": ":param season_number:  Ordinal number"
":return: 匹配的媒体信息": ":return:  Matching media messages"
"logger.error(f"连接TMDB出错：{e1}")": "logger.error(f" GroutTMDB Make a mistake：{e1}")"
"logger.error(f"连接TMDB出错：{err}")": "logger.error(f" GroutTMDB Make a mistake：{err}")"
"logger.error(f"连接TMDB出错：{e}")": "logger.error(f" GroutTMDB Make a mistake：{e}")"
"logger.debug("%s 未找到季%s相关信息!" % (name, season_number))": "logger.debug("%s  No season found%s Related information!" % (name, season_number))"
"# 按年份降序排列": "#  Sort by year in descending order"
"# 年份": "#  Particular year"
"# 匹配别名、译名": "#  Match alias、 Translated names"
"查询TMDB电视剧的所有季": "Consult (a document etc)TMDB All seasons of the tv series"
":param tv_info: TMDB 的季信息": ":param tv_info: TMDB  Seasonal information"
":return: 包括每季集数的字典": ":return:  Includes a dictionary of episodes per season"
""name": "特别篇",": ""name": " Special edition (of a newspaper)","
""name": "第 1 季",": ""name": " (prefix indicating ordinal number, e.g. first, number two etc) 1  Classifier for seasonal crop yield or seasons of a tv series","
"根据名称同时查询电影和电视剧，没有类型也没有年份时使用": "Search for both movies and tv shows by name， Used when there is no type or year"
":param name: 识别的文件名或种子名": ":param name:  Recognized file name or seed name"
":return: 匹配的媒体信息": ":return:  Matching media messages"
"logger.error(f"连接TMDB出错：{err}")": "logger.error(f" GroutTMDB Make a mistake：{err}")"
"logger.error(f"连接TMDB出错：{e}")": "logger.error(f" GroutTMDB Make a mistake：{e}")"
"logger.debug(f"API返回：{str(self.search.total_results)}")": "logger.debug(f"API Come (or go) back：{str(self.search.total_results)}")"
"# 返回结果": "#  Return results"
"logger.debug(f"{name} 未找到相关媒体息!")": "logger.debug(f"{name}  No relevant media information found!")"
"# 按年份降序排列，电影在前面": "#  Sort by year in descending order， The movie's ahead."
"# 匹配别名、译名": "#  Match alias、 Translated names"
"# 匹配别名、译名": "#  Match alias、 Translated names"
"# 类型变更": "#  Type change"
"搜索TMDB网站，直接抓取结果，结果只有一条时才返回": "Look for sth.TMDB Node， Direct grab results， Returns when there is only one result"
":param name: 名称": ":param name:  Name (of a thing)"
":param mtype: 媒体类型": ":param mtype:  Media type"
"logger.info("正在从TheDbMovie网站查询：%s ..." % name)": "logger.info(" In the process of being withdrawn fromTheDbMovie Website search：%s ..." % name)"
"logger.info("%s 从WEB识别到 电影：TMDBID=%s, 名称=%s, 上映日期=%s" % (": "logger.info("%s  Through (a gap)WEB Recognize  Cinematic：TMDBID=%s,  Name (of a thing)=%s,  Release date=%s" % ("
"logger.info("%s 从WEB识别到 电视剧：TMDBID=%s, 名称=%s, 首播日期=%s" % (": "logger.info("%s  Through (a gap)WEB Recognize  Dramas：TMDBID=%s,  Name (of a thing)=%s,  Premiere date=%s" % ("
"logger.info("%s TMDB网站返回数据过多：%s" % (name, len(tmdb_links)))": "logger.info("%s TMDB Excessive website return data：%s" % (name, len(tmdb_links)))"
"logger.info("%s TMDB网站未查询到媒体信息！" % name)": "logger.info("%s TMDB No media information was available on the website！" % name)"
"logger.error(f"从TheDbMovie网站查询出错：{err}")": "logger.error(f" Through (a gap)TheDbMovie Website query error：{err}")"
"给定TMDB号，查询一条媒体信息": "State in advanceTMDB Horn (wind instrument)， Search for a piece of media information"
":param mtype: 类型：电影、电视剧、动漫，为空时都查（此时用不上年份）": ":param mtype:  Typology： Cinematic、 Dramas、 Cartoons and comics， Check when it's empty.（ Year not available at this time）"
":param tmdbid: TMDB的ID，有tmdbid时优先使用tmdbid，否则使用年份和标题": ":param tmdbid: TMDB (used form a nominal expression)ID， There aretmdbid Priority is given to the use oftmdbid， Otherwise use year and title"
"从TMDB详情中获取genre_id列表": "Through (a gap)TMDB Get it in the detailsgenre_id Listings"
"# 查询TMDB详ngeq": "#  Consult (a document etc)TMDB Comprehensivengeq"
"# 转换genreid": "#  Conversionsgenreid"
"# 别名和译名": "#  Alias and translation"
"# 转换中文标题": "#  Convert chinese title"
"更新TMDB信息中的中文名称": "UpdateTMDB Chinese name in the message"
"从别名中获取中文标题": "Get chinese title from alias"
"# 查找中文名": "#  Find chinese name"
"获取电影的详情": "Get the details of the movie"
":return: TMDB信息": ":return: TMDB Text"
""name": "穿靴子的猫（系列）",": ""name": " Puss in boots (computer game)（ Range）","
""name": "动画"": ""name": " Anime""
""name": "动作"": ""name": " Movements""
""name": "冒险"": ""name": " Take chances""
""name": "喜剧"": ""name": " Comedy""
""name": "家庭"": ""name": " Household""
""name": "奇幻"": ""name": " Fantastical""
""overview": "时隔11年，臭屁自大又爱卖萌的猫大侠回来了！如今的猫大侠（安东尼奥·班德拉斯 配音），依旧幽默潇洒又不拘小节、数次“花式送命”后，九条命如今只剩一条，于是不得不请求自己的老搭档兼“宿敌”——迷人的软爪妞（萨尔玛·海耶克 配音）来施以援手来恢复自己的九条生命。",": ""overview": " Separated in time (usu. followed by a quantity of time)11 Surname nian， The pompous, pompous, pompous, pompous, pompous cat warrior is back.！ Today's cat warrior（ Antonio (name)· Banderas (name)  Dubbing (filmmaking)）， He's still funny and unpretentious.、 Several times“ Get oneself killed in a fancy way” Empress， Nine lives and now only one.， So he had to ask his old partner and“ Old enemy”—— Charming soft-clawed chick.（ Salma (name)· Hayek (name)  Dubbing (filmmaking)） To give a helping hand to restore his nine lives.。","
""title": "穿靴子的猫2",": ""title": " Puss in boots (computer game)2","
"logger.info("正在查询TMDB电影：%s ..." % tmdbid)": "logger.info(" Inquiry in progressTMDB Cinematic：%s ..." % tmdbid)"
"logger.info(f"{tmdbid} 查询结果：{tmdbinfo.get('title')}")": "logger.info(f"{tmdbid}  Inquiry results：{tmdbinfo.get('title')}")"
"获取电视剧的详情": "Get details about the tv series"
":return: TMDB信息": ":return: TMDB Text"
""name": "剧情"": ""name": " Plots""
""name": "动作冒险"": ""name": " Action adventure""
""name": "当你迷失在黑暗中",": ""name": " When you're lost in the dark","
""overview": "在一场全球性的流行病摧毁了文明之后，一个顽强的幸存者负责照顾一个 14 岁的小女孩，她可能是人类最后的希望。",": ""overview": " After a global pandemic destroys civilization.， A hardy survivor charged with caring for a 14  Little girl.， She may be mankind's last hope.。","
""name": "最后生还者",": ""name": " Last survivor","
""name": "虫草变异菌",": ""name": " Cordyceps sinensis","
""overview": "不明真菌疫情肆虐之后的美国，被真菌感染的人都变成了可怕的怪物，乔尔（Joel）为了换回武器答应将小女孩儿艾莉（Ellie）送到指定地点，由此开始了两人穿越美国的漫漫旅程。",": ""overview": " U.s. after unidentified fungus outbreaks， People infected with the fungus become horrible monsters.， Joel (name)（Joel） In exchange for the weapon, he promised to take the little girl, ellie.（Ellie） Delivered to the designated location， Thus began their long journey across america.。","
""name": "第 1 季",": ""name": " (prefix indicating ordinal number, e.g. first, number two etc) 1  Classifier for seasonal crop yield or seasons of a tv series","
"logger.info("正在查询TMDB电视剧：%s ..." % tmdbid)": "logger.info(" Inquiry in progressTMDB Dramas：%s ..." % tmdbid)"
"logger.info(f"{tmdbid} 查询结果：{tmdbinfo.get('name')}")": "logger.info(f"{tmdbid}  Inquiry results：{tmdbinfo.get('name')}")"
"获取电视剧季的详情": "Get details on the tv season"
":param season: 季，数字": ":param season:  Classifier for seasonal crop yield or seasons of a tv series， Digital (electronics etc)"
":return: TMDB信息": ":return: TMDB Text"
""name": "当你迷失在黑暗中",": ""name": " When you're lost in the dark","
""overview": "在一场全球性的流行病摧毁了文明之后，一个顽强的幸存者负责照顾一个 14 岁的小女孩，她可能是人类最后的希望。",": ""overview": " After a global pandemic destroys civilization.， A hardy survivor charged with caring for a 14  Little girl.， She may be mankind's last hope.。","
""name": "第 1 季",": ""name": " (prefix indicating ordinal number, e.g. first, number two etc) 1  Classifier for seasonal crop yield or seasons of a tv series","
"logger.info("正在查询TMDB电视剧：%s，季：%s ..." % (tmdbid, season))": "logger.info(" Inquiry in progressTMDB Dramas：%s， Classifier for seasonal crop yield or seasons of a tv series：%s ..." % (tmdbid, season))"
"获取电视剧集的详情": "Get details of tv episodes"
":param season: 季，数字": ":param season:  Classifier for seasonal crop yield or seasons of a tv series， Digital (electronics etc)"
":param episode: 集，数字": ":param episode:  Classifier for sections of a tv series e.g. episode， Digital (electronics etc)"
"logger.info("正在查询TMDB集图片：%s，季：%s，集：%s ..." % (tmdbid, season, episode))": "logger.info(" Inquiry in progressTMDB Picture collection：%s， Classifier for seasonal crop yield or seasons of a tv series：%s， Classifier for sections of a tv series e.g. episode：%s ..." % (tmdbid, season, episode))"
"发现电影": "Discover the movie"
"logger.info(f"正在发现电影：{kwargs}...")": "logger.info(f" Movies are being discovered：{kwargs}...")"
"发现电视剧": "Discovery tv series"
"logger.info(f"正在发现电视剧：{kwargs}...")": "logger.info(f" Drama being discovered：{kwargs}...")"
"获取电影的图片": "Get the picture of the movie"
"logger.info(f"正在获取电影图片：{tmdbid}...")": "logger.info(f" Getting movie pictures now：{tmdbid}...")"
"获取电视剧的图片": "Get pictures of tv shows"
"logger.info(f"正在获取电视剧图片：{tmdbid}...")": "logger.info(f" Getting drama pictures：{tmdbid}...")"
"获取电影的相似电影": "Get movies similar to the movie"
"logger.info(f"正在获取相似电影：{tmdbid}...")": "logger.info(f" Getting similar movies now：{tmdbid}...")"
"获取电视剧的相似电视剧": "Get similar tv shows to tv shows"
"logger.info(f"正在获取相似电视剧：{tmdbid}...")": "logger.info(f" Getting similar tv shows：{tmdbid}...")"
"获取电影的推荐电影": "Get movie recommendations for movies"
"logger.info(f"正在获取推荐电影：{tmdbid}...")": "logger.info(f" Getting recommended movies：{tmdbid}...")"
"获取电视剧的推荐电视剧": "Get recommended tv shows for tv shows"
"logger.info(f"正在获取推荐电视剧：{tmdbid}...")": "logger.info(f" Getting recommended tv shows：{tmdbid}...")"
"获取电影的演职员列表": "Get a list of the cast and crew of the movie"
"logger.info(f"正在获取电影演职人员：{tmdbid}...")": "logger.info(f" Getting the movie cast now：{tmdbid}...")"
"获取电视剧的演职员列表": "Get a list of the cast and crew of the tv series"
"logger.info(f"正在获取电视剧演职人员：{tmdbid}...")": "logger.info(f" In the process of acquiring the cast of the tv series：{tmdbid}...")"
"获取人物详情": "Get character details"
""陈赫"": "" Chen he (1961-), chinese actor""
""biography": "陈赫，xxx",": ""biography": " Chen he (1961-), chinese actor，xxx","
"logger.info(f"正在获取人物详情：{person_id}...")": "logger.info(f" Character details are being obtained：{person_id}...")"
"获取人物参演作品": "Get character acting credits"
"logger.info(f"正在获取人物参演作品：{person_id}...")": "logger.info(f" Getting characters to act：{person_id}...")"
"清除缓存": "Clear the cache"
"查询剧集组年份": "Check the year of the episode group"
"logger.info(f"正在获取剧集组年份：{episode_group.get('id')}...")": "logger.info(f" The year of the episode group is being obtained：{episode_group.get('id')}...")"
"# 只处理剧集部分": "#  Processing only the episode portion"
"# 当前季第一季时间": "#  Current season season 1 time"
