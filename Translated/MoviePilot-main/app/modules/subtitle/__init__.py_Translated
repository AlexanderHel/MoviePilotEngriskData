"字幕下载模块": "Subtitle download module"
"# 站点详情页字幕下载链接识别XPATH": "#  Recognition of subtitle download links on site details pageXPATH"
"'//td[@class="rowhead"][text()="字幕"]/following-sibling::td//a/@href',": "'//td[@class="rowhead"][text()=" Subtitling"]/following-sibling::td//a/@href',"
"添加下载任务成功后，从站点下载字幕，保存到下载目录": "After adding a successful download task， Download subtitles from the site， Save to download directory"
":param context:  上下文，包括识别信息、媒体信息、种子信息": ":param context:   (textual) context， Includes identifying information、 Media information、 Seed information"
":param download_dir:  下载目录": ":param download_dir:   Download catalog"
":param torrent_path:  种子文件地址": ":param torrent_path:   Seed file address"
":return: None，该方法可被多个模块同时处理": ":return: None， This method can be processed by multiple modules simultaneously"
"# 没有种子文件不处理": "#  No seed files are not processed"
"# 没有详情页不处理": "#  No detail page not processed"
"# 字幕下载目录": "#  Subtitle download catalog"
"logger.info("开始从站点下载字幕：%s" % torrent.page_url)": "logger.info(" Start downloading subtitles from the site：%s" % torrent.page_url)"
"# 获取种子信息": "#  Getting seed information"
"# 文件保存目录，如果是单文件种子，则folder_name是空，此时文件保存目录就是下载目录": "#  File save directory， If the seed is a single file， Imitatefolder_name Emptiness， At this point, the file save directory is the download directory"
"# 等待目录存在": "#  Wait for the catalog to exist"
"# 目录仍然不存在，且有文件夹名，则创建目录": "#  Catalog still doesn't exist， And has a folder name， Then create the directory"
"# 读取网站代码": "#  Read website code"
"logger.warn(f"读取页面代码失败：{torrent.page_url}")": "logger.warn(f" Failed to read page code：{torrent.page_url}")"
"# 下载所有字幕文件": "#  Download all subtitle files"
"logger.info(f"找到字幕下载链接：{sublink}，开始下载...")": "logger.info(f" Find subtitle download links：{sublink}， Start download...")"
"# 下载": "#  Downloading"
"# 保存ZIP": "#  Save (a file etc) (computing)ZIP"
"logger.warn(f"链接不是字幕文件：{sublink}")": "logger.warn(f" The link is not a subtitle file.：{sublink}")"
"# ZIP包": "# ZIP Contract (to or for)"
"# 保存": "#  Save (a file etc) (computing)"
"# 解压路径": "#  Unzip path"
"# 解压文件": "#  Unzip the file"
"# 遍历转移文件": "#  Traversing the transfer file"
"logger.info(f"字幕文件已存在：{target_sub_file}")": "logger.info(f" Subtitle file already exists：{target_sub_file}")"
"logger.info(f"转移字幕 {sub_file} 到 {target_sub_file} ...")": "logger.info(f" Subtitle transfer {sub_file}  Until (a time) {target_sub_file} ...")"
"# 删除临时文件": "#  Deletion of temporary files"
"logger.error(f"删除临时文件失败：{err}")": "logger.error(f" Failure to delete temporary files：{err}")"
"# 保存": "#  Save (a file etc) (computing)"
"logger.info(f"转移字幕 {sub_file} 到 {target_sub_file}")": "logger.info(f" Subtitle transfer {sub_file}  Until (a time) {target_sub_file}")"
"logger.error(f"下载字幕文件失败：{sublink}")": "logger.error(f" Failed to download subtitle file：{sublink}")"
"logger.info(f"{torrent.page_url} 页面字幕下载完成")": "logger.info(f"{torrent.page_url}  Page subtitle download complete")"
"logger.warn(f"{torrent.page_url} 页面未找到字幕下载链接")": "logger.warn(f"{torrent.page_url}  Subtitle download link not found on page")"
"logger.warn(f"连接 {torrent.page_url} 失败，状态码：{res.status_code}")": "logger.warn(f" Grout {torrent.page_url}  Fail (e.g. experiments)， Status code：{res.status_code}")"
"logger.warn(f"无法打开链接：{torrent.page_url}")": "logger.warn(f" Unable to open link：{torrent.page_url}")"
