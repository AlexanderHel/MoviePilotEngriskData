"# 企业微信Token": "#  Enterprise wechatToken"
"# 企业微信Token过期时间": "#  Enterprise wechatToken Expiration date (of document)"
"# 企业微信Token获取时间": "#  Enterprise wechatToken Access time"
"# 企业微信CorpID": "#  Enterprise wechatCorpID"
"# 企业微信AppSecret": "#  Enterprise wechatAppSecret"
"# 企业微信AppID": "#  Enterprise wechatAppID"
"# 企业微信发送消息URL": "#  Enterprise wechat send messageURL"
"# 企业微信获取TokenURL": "#  Enterprise wechat getTokenURL"
"# 企业微信创新菜单URL": "#  Enterprise wechat innovation menuURL"
"初始化": "Initialization"
"获取微信Token": "Get wechatToken"
":return： 微信Token": ":return：  MicrosoftToken"
"logger.error(f"获取微信access_token失败，错误码：{res.status_code}，错误原因：{res.reason}")": "logger.error(f" Get wechataccess_token Fail (e.g. experiments)， Error code：{res.status_code}， Cause of error：{res.reason}")"
"logger.error(f"获取微信access_token失败，未获取到返回信息")": "logger.error(f" Get wechataccess_token Fail (e.g. experiments)， Return information not obtained")"
"logger.error(f"获取微信access_token失败，错误信息：{e}")": "logger.error(f" Get wechataccess_token Fail (e.g. experiments)， Error message：{e}")"
"发送文本消息": "Send text message"
":param title: 消息标题": ":param title:  Message title"
":param text: 消息内容": ":param text:  Message"
":param userid: 消息发送对象的ID，为空则发给所有人": ":param userid:  The message sender'sID， If it's empty, send it to everyone."
":return: 发送状态，错误信息": ":return:  Sender state， Error message"
"发送图文消息": "Send a graphic message"
":param title: 消息标题": ":param title:  Message title"
":param text: 消息内容": ":param text:  Message"
":param image_url: 图片地址": ":param image_url:  Image address"
":param userid: 消息发送对象的ID，为空则发给所有人": ":param userid:  The message sender'sID， If it's empty, send it to everyone."
":return: 发送状态，错误信息": ":return:  Sender state， Error message"
"微信消息发送入口，支持文本、图片、链接跳转、指定发送对象": "Wechat messaging portal， Supported texts、 Photograph、 Link jumping、 Specify who to send it to"
":param title: 消息标题": ":param title:  Message title"
":param text: 消息内容": ":param text:  Message"
":param image: 图片地址": ":param image:  Image address"
":param userid: 消息发送对象的ID，为空则发给所有人": ":param userid:  The message sender'sID， If it's empty, send it to everyone."
":return: 发送状态，错误信息": ":return:  Sender state， Error message"
"logger.error("获取微信access_token失败，请检查参数配置")": "logger.error(" Get wechataccess_token Fail (e.g. experiments)， Please check the parameter configuration")"
"发送列表类消息": "Sending list class messages"
"logger.error("获取微信access_token失败，请检查参数配置")": "logger.error(" Get wechataccess_token Fail (e.g. experiments)， Please check the parameter configuration")"
"title = f"{index}. {media.title_year}\n类型：{media.type.value}，评分：{media.vote_average}"": "title = f"{index}. {media.title_year}\n Typology：{media.type.value}， Score (of student's work)：{media.vote_average}""
"title = f"{index}. {media.title_year}\n类型：{media.type.value}"": "title = f"{index}. {media.title_year}\n Typology：{media.type.value}""
"发送列表消息": "Send a list message"
"logger.error("获取微信access_token失败，请检查参数配置")": "logger.error(" Get wechataccess_token Fail (e.g. experiments)， Please check the parameter configuration")"
"# 先发送标题": "#  Send the title first"
"# 发送列表": "#  Distribution list"
"向微信发送请求": "Send a request to wechat"
"logger.error(f"发送请求失败，错误信息：{ret_json.get('errmsg')}")": "logger.error(f" Failed to send request， Error message：{ret_json.get('errmsg')}")"
"logger.error(f"发送请求失败，错误码：{res.status_code}，错误原因：{res.reason}")": "logger.error(f" Failed to send request， Error code：{res.status_code}， Cause of error：{res.reason}")"
"logger.error(f"发送请求失败，未获取到返回信息")": "logger.error(f" Failed to send request， Return information not obtained")"
"logger.error(f"发送请求失败，错误信息：{err}")": "logger.error(f" Failed to send request， Error message：{err}")"
"自动注册微信菜单": "Automatic registration of wechat menu"
":param commands: 命令字典": ":param commands:  Command dictionary"
"命令字典：": "Command dictionary："
""description": "同步站点",": ""description": " Synchronization site","
""category": "站点",": ""category": " Website","
"注册报文格式，一级菜单只有最多3条，子菜单最多只有5条：": "Registration message format， The first level menu only has the most3 Clause (of law or treaty)， The submenu has a maximum of5 Clause (of law or treaty)："
""name":"今日歌曲",": ""name":" Song of the day","
""name":"菜单",": ""name":" Menu","
""name":"搜索",": ""name":" Look for sth.","
""name":"赞一下我们",": ""name":" Give us a shout out.","
"# 请求URL": "#  RequestingURL"
"# 对commands按category分组": "#  Treat (sb a certain way)commands Check or refer tocategory Clusters"
"# 一级菜单": "#  Level 1 menu"
"# 二级菜单": "#  Secondary menu"
"# 发送请求": "#  Send request"
