"# 插件名称": "#  Plugin name"
"plugin_name = "自动转移做种"": "plugin_name = " Autotransfer seeding""
"# 插件描述": "#  Plugin description"
"plugin_desc = "定期转移下载器中的做种任务到另一个下载器。"": "plugin_desc = " Regularly transfer seeding tasks from a downloader to another downloader。""
"# 插件图标": "#  Plugin icons"
"# 主题色": "#  Theme color"
"# 插件版本": "#  Plugin version"
"# 插件作者": "#  Plugin authors"
"# 作者主页": "#  Author's homepage"
"# 插件配置项ID前缀": "#  Plugin configuration item ID prefix"
"# 加载顺序": "#  Loading sequence"
"# 可使用的用户级别": "#  Available user levels"
"# 私有属性": "#  Private property"
"# 开关": "#  Switchgear"
"# 退出事件": "#  Logout event"
"# 待检查种子清单": "#  List of seeds to be checked"
"# 任务标签": "#  Mission label"
"_torrent_tags = ["已整理", "转移做种"]": "_torrent_tags = [" Collated", " Master sth."]"
"# 读取配置": "#  Read configuration"
"# 停止现有任务": "#  Discontinuation of existing mandates"
"# 启动定时任务 & 立即运行一次": "#  Starting a timed task &  Run one immediately"
"# 检查配置": "#  Check configuration"
"logger.error(f"源下载器种子文件保存路径不存在：{self._fromtorrentpath}")": "logger.error(f" Source downloader seed file save path does not exist：{self._fromtorrentpath}")"
"self.systemmessage.put(f"源下载器种子文件保存路径不存在：{self._fromtorrentpath}")": "self.systemmessage.put(f" Source downloader seed file save path does not exist：{self._fromtorrentpath}")"
"logger.error(f"源下载器和目的下载器不能相同")": "logger.error(f" Source and destination downloaders cannot be the same")"
"self.systemmessage.put(f"源下载器和目的下载器不能相同")": "self.systemmessage.put(f" Source and destination downloaders cannot be the same")"
"logger.info(f"转移做种服务启动，周期：{self._cron}")": "logger.info(f" Transfer seeding service launched， Cyclicality：{self._cron}")"
"logger.error(f"转移做种服务启动失败：{e}")": "logger.error(f" Failure to start the transfer seeding service：{e}")"
"self.systemmessage.put(f"转移做种服务启动失败：{e}")": "self.systemmessage.put(f" Failure to start the transfer seeding service：{e}")"
"logger.info(f"转移做种服务启动，立即运行一次")": "logger.info(f" Transfer seeding service launched， Run one immediately")"
"# 关闭一次性开关": "#  Turn off the disposable switch"
"# 追加种子校验服务": "#  Additional seed verification services"
"# 启动服务": "#  Starting services"
"拼装插件配置页面，需要返回两块数据：1、页面配置；2、数据结构": "Assembly plugin configuration page， Two pieces of data need to be returned：1、 Page configuration；2、 Data structure"
"'label': '启用插件',": "'label': ' Enabling plug-ins',"
"'label': '发送通知',": "'label': ' Send notification',"
"'label': '执行周期',": "'label': ' Implementation period',"
"'label': '不转移种子标签',": "'label': ' No transfer of seed labels',"
"'label': '源下载器',": "'label': ' Source downloader',"
"'label': '源下载器种子文件路径',": "'label': ' Source downloader seed file path',"
"'label': '源数据文件根路径',": "'label': ' Source data file root path',"
"'placeholder': '根路径，留空不进行路径转换'": "'placeholder': ' Root path， Leave blank for no path conversion'"
"'label': '目的下载器',": "'label': ' Destination downloader',"
"'label': '目的数据文件根路径',": "'label': ' Destination data file root path',"
"'placeholder': '根路径，留空不进行路径转换'": "'placeholder': ' Root path， Leave blank for no path conversion'"
"'label': '不转移数据文件目录',": "'label': ' No transfer of data file directories',"
"'placeholder': '每一行一个目录'": "'placeholder': ' One directory per line'"
"'label': '校验完成后自动开始',": "'label': ' Automatically starts when calibration is complete',"
"'label': '删除源种子',": "'label': ' Deletion of source seeds',"
"'label': '立即运行一次',": "'label': ' Run one immediately',"
"根据类型返回下载器实例": "Returns downloader instances by type"
"添加下载任务": "Add download tasks"
"# 生成随机Tag": "#  Generate randomTag"
"tag=["已整理", "转移做种", tag])": "tag=[" Collated", " Master sth.", tag])"
"# 获取种子Hash": "#  Getting seeds Hash"
"logger.error(f"{downloader} 获取种子Hash失败")": "logger.error(f"{downloader}  Getting seeds Hash Fail (e.g. experiments)")"
"# 添加任务": "#  Add tasks"
"labels=["已整理", "转移做种"])": "labels=[" Collated", " Master sth."])"
"logger.error(f"不支持的下载器：{downloader}")": "logger.error(f" Unsupported downloaders：{downloader}")"
"开始转移做种": "Beginning of transfer for seeding"
"logger.info("开始转移做种任务 ...")": "logger.info(" Beginning of the transfer of seeding tasks ...")"
"# 源下载器": "#  Source downloader"
"# 目的下载器": "#  Destination downloader"
"# 获取下载器中已完成的种子": "#  Getting completed seeds in the downloader"
"logger.info(f"下载器 {downloader} 已完成种子数：{len(torrents)}")": "logger.info(f" Downloader {downloader}  Number of seeds completed：{len(torrents)}")"
"logger.info(f"下载器 {downloader} 没有已完成种子")": "logger.info(f" Downloader {downloader}  No completed seeds")"
"# 过滤种子，记录保存目录": "#  Filtering seeds， Records retention catalog"
"logger.info(f"转移服务停止")": "logger.info(f" Discontinuation of transfer services")"
"# 获取种子hash": "#  Getting seeds hash"
"# 获取保存路径": "#  Get save path"
"# 过滤不需要转移的路径": "#  Filtering paths that do not need to be transferred"
"logger.info(f"种子 {hash_str} 保存路径 {save_path} 不需要转移，跳过 ...")": "logger.info(f" Torrent {hash_str}  Save path {save_path}  No transfer required， Skip over ...")"
"# 获取种子标签": "#  Get seed label"
"logger.info(f"种子 {hash_str} 含有不转移标签 {label}，跳过 ...")": "logger.info(f" Torrent {hash_str}  Contains non-transferable labels {label}， Skip over ...")"
"# 添加转移数据": "#  Add transfer data"
"# 开始转移任务": "#  Commencement of the transfer of tasks"
"logger.info(f"需要转移的种子数：{len(trans_torrents)}")": "logger.info(f" Number of seeds to be transferred：{len(trans_torrents)}")"
"# 记数": "#  Keep count of the number of people"
"# 总成功数": "#  Total number of successes"
"# 总失败数": "#  Total number of failures"
"# 跳过数": "#  Skip count"
"# 检查种子文件是否存在": "#  Check if the seed file exists"
"logger.error(f"种子文件不存在：{torrent_file}")": "logger.error(f" Seed file does not exist：{torrent_file}")"
"# 失败计数": "#  Failure count"
"# 查询hash值是否已经在目的下载器中": "#  Consult (a document etc)hash Whether the value is already in the destination downloader"
"logger.info(f"{torrent_item.get('hash')} 已在目的下载器中，跳过 ...")": "logger.info(f"{torrent_item.get('hash')}  Already in the destination downloader， Skip over ...")"
"# 跳过计数": "#  Skip count"
"# 转换保存路径": "#  Convert save path"
"logger.error(f"转换保存路径失败：{torrent_item.get('save_path')}")": "logger.error(f" Failed to convert save path：{torrent_item.get('save_path')}")"
"# 失败计数": "#  Failure count"
"# 如果源下载器是QB检查是否有Tracker，没有的话额外获取": "#  If the source downloader is QB check whether there is a Tracker, Get extra if you don't have it"
"# 读取种子内容、解析种子文件": "#  Read the contents of the seed、 Parsing seed files"
"logger.warn(f"读取种子文件失败：{torrent_file}")": "logger.warn(f" Failed to read seed file：{torrent_file}")"
"# 读取trackers": "#  Retrievetrackers"
"logger.warn(f"解析种子文件 {torrent_file} 失败：{err}")": "logger.warn(f" Parsing seed files {torrent_file}  Fail (e.g. experiments)：{err}")"
"logger.info(f"{torrent_item.get('hash')} 未发现tracker信息，尝试补充tracker信息...")": "logger.info(f"{torrent_item.get('hash')}  Not found tracker Text， Trying to supplement tracker Text...")"
"# 读取fastresume文件": "#  Retrievefastresume File"
"logger.warn(f"fastresume文件不存在：{fastresume_file}")": "logger.warn(f"fastresume File does not exist：{fastresume_file}")"
"# 尝试补充trackers": "#  Trying to supplement trackers"
"# 解析fastresume文件": "#  Analyze fastresume File"
"# 读取trackers": "#  Retrieve trackers"
"# 重新赋值": "#  Reassign"
"# 替换种子文件路径": "#  Replace the seed file path"
"# 编码并保存到临时文件": "#  Encoded and saved to a temporary file"
"logger.error(f"解析fastresume文件 {fastresume_file} 出错：{err}")": "logger.error(f" Analyzefastresume File {fastresume_file}  Make a mistake：{err}")"
"# 发送到另一个下载器中下载：默认暂停、传输下载路径、关闭自动管理模式": "#  Send to another downloader to download： Default pause、 Transfer download path、 Disable automatic management mode"
"logger.info(f"添加转移做种任务到下载器 {todownloader}：{torrent_file}")": "logger.info(f" Add transfer seeding tasks to the downloader {todownloader}：{torrent_file}")"
"# 下载失败": "#  Failed to download"
"logger.error(f"添加下载任务失败：{torrent_file}")": "logger.error(f" Failed to add download task：{torrent_file}")"
"# 下载成功": "#  Download successfully"
"logger.info(f"成功添加转移做种任务，种子文件：{torrent_file}")": "logger.info(f" Successful addition of transfer seeding tasks， Seed file：{torrent_file}")"
"# TR会自动校验，QB需要手动校验": "# TR will automatically check, QB needs to be manually checked"
"logger.info(f"qbittorrent 开始校验 {download_id} ...")": "logger.info(f"qbittorrent  Start calibration {download_id} ...")"
"# 追加校验任务": "#  Additional calibration tasks"
"logger.info(f"添加校验检查任务：{download_id} ...")": "logger.info(f" Add a calibration check task：{download_id} ...")"
"# 删除源种子，不能删除文件！": "#  Deletion of source seeds， Cannot delete files！"
"logger.info(f"删除源下载器任务（不含文件）：{torrent_item.get('hash')} ...")": "logger.info(f" Delete source downloader task（ No documents）：{torrent_item.get('hash')} ...")"
"# 成功计数": "#  Success rate"
"# 插入转种记录": "#  Insertion of trans-species records"
"# 触发校验任务": "#  Trigger the calibration task"
"# 发送通知": "#  Send notification"
"title="【转移做种任务执行完成】",": "title="【 Transfer of seeding tasks completed】","
"text=f"总数：{total}，成功：{success}，失败：{fail}，跳过：{skip}"": "text=f" Aggregate：{total}， Successes：{success}， Fail (e.g. experiments)：{fail}， Skip over：{skip}""
"logger.info(f"没有需要转移的种子")": "logger.info(f" No seeds to be transferred")"
"logger.info("转移做种任务执行完成")": "logger.info(" Transfer of seeding tasks completed")"
"定时检查下载器中种子是否校验完成，校验完成且完整的自动开始辅种": "Regularly check if the seeds in the downloader have been verified.， Automatic start of auxiliary seeding when calibration is complete and intact"
"# 校验下载器": "#  Calibration downloader"
"# 需要检查的种子": "#  Seeds to be checked"
"logger.info(f"开始检查下载器 {downloader} 的校验任务 ...")": "logger.info(f"Start checking the verification task of downloader {downloader} ...")"
"# 运行状态": "#  Operational state"
"# 获取任务": "#  Obtaining mandates"
"# 可做种的种子": "#  Seed that can be used for planting"
"# 获取种子hash": "#  Getting seeds hash"
"# 判断是否可做种": "#  Determination of seedability"
"logger.info(f"共 {len(can_seeding_torrents)} 个任务校验完成，开始做种")": "logger.info(f" Common {len(can_seeding_torrents)}  Completion of mission calibration， Start the seeds.")"
"# 开始做种": "#  Start the seeds."
"# 去除已经处理过的种子": "#  Removal of already treated seeds"
"logger.info(f"没有新的任务校验完成，将在下次个周期继续检查 ...")": "logger.info(f" No new task calibration completed， To be continued in the next cycle ...")"
"logger.info(f"下载器 {downloader} 查询校验任务失败，将在下次继续查询 ...")": "logger.info(f" Downloader {downloader}  Query validation task failed， Will continue to inquire next time ...")"
"logger.info(f"下载器 {downloader} 中没有需要检查的校验任务，清空待处理列表")": "logger.info(f" Downloader {downloader}  There are no calibration tasks that need to be checked in the， Empty the pending list")"
"获取种子hash": "Getting seeds hash"
"获取种子标签": "Get seed label"
"获取种子保存路径": "Get seed save path"
"判断种子是否可以做种并处于暂停状态": "Determine if a seed is ready to be seeded and is in a suspended state"
"转换保存路径": "Convert save path"
"# 没有保存目录，以目的根目录为准": "#  No save directory， Based on the destination root directory"
"# 没有设置根目录时返回save_path": "#  Returns if the root directory is not set save_path"
"# 统一目录格式": "#  Harmonized directory format"
"# 替换根目录": "#  Replace the root directory"
"退出插件": "Exit plugin"
