"# 插件名称": "#  Plug-in name"
"plugin_name = "演职人员刮削"": "plugin_name = " Performer scraping""
"# 插件描述": "#  Plugin description"
"plugin_desc = "刮削演职人员图片以及中文名称。"": "plugin_desc = " Pictures of scraping staff and their chinese names。""
"# 插件图标": "#  Plug-in icons"
"# 主题色": "#  Theme color"
"# 插件版本": "#  Plug-in version"
"# 插件作者": "#  Plug-in authors"
"# 作者主页": "#  Author's homepage"
"# 插件配置项ID前缀": "#  Plug-in configuration itemsID Prefix (linguistics)"
"# 加载顺序": "#  Loading sequence"
"# 可使用的用户级别": "#  Available user levels"
"# 退出事件": "#  Logout event"
"# 私有属性": "#  Private property"
"# 停止现有任务": "#  Discontinuation of existing mandates"
"# 启动服务": "#  Starting services"
"name="演职人员刮削")": "name=" Performer scraping")"
"logger.info(f"演职人员刮削服务启动，周期：{self._cron}")": "logger.info(f" Performer scraping service launched， Cyclicality：{self._cron}")"
"logger.error(f"演职人员刮削服务启动失败，错误信息：{str(e)}")": "logger.error(f" Performer scraping service startup failure， Error message：{str(e)}")"
"self.systemmessage.put(f"演职人员刮削服务启动失败，错误信息：{str(e)}")": "self.systemmessage.put(f" Performer scraping service startup failure， Error message：{str(e)}")"
"logger.info(f"演职人员刮削服务启动，立即运行一次")": "logger.info(f" Performer scraping service launched， Run one immediately")"
"# 关闭一次性开关": "#  Turn off the disposable switch"
"# 保存配置": "#  Save configuration"
"# 启动服务": "#  Starting services"
"更新配置": "Updating the configuration"
"拼装插件配置页面，需要返回两块数据：1、页面配置；2、数据结构": "Assembly plugin configuration page， Two pieces of data need to be returned：1、 Page configuration；2、 Data structure"
"'label': '启用插件',": "'label': ' Enabling plug-ins',"
"'label': '立即运行一次',": "'label': ' Run one immediately',"
"'label': '媒体库扫描周期',": "'label': ' Media library scanning cycle',"
"'placeholder': '5位cron表达式'": "'placeholder': '5 Classifier for honorific peoplecron Displayed formula'"
"'label': '入库延迟时间（秒）',": "'label': ' Delays in warehousing（ Unit of angle or arc equivalent one sixtieth of a degree）',"
"'label': '删除非中文演员',": "'label': ' Deletion of non-chinese speaking actors',"
"根据事件实时刮削演员信息": "Real-time scraping of actor information based on events"
"# 事件数据": "#  Event data"
"# 延迟": "#  Procrastinate"
"# 查询媒体服务器中的条目": "#  Querying entries in the media server"
"logger.warn(f"演职人员刮削 {mediainfo.title_year} 在媒体库中不存在")": "logger.warn(f" Performer scraping {mediainfo.title_year}  Doesn't exist in the media library")"
"# 查询条目详情": "#  Search for entry details"
"logger.warn(f"演职人员刮削 {mediainfo.title_year} 条目详情获取失败")": "logger.warn(f" Performer scraping {mediainfo.title_year}  Failed to get entry details")"
"# 刮削演职人员信息": "#  Scraping cast and crew information"
"扫描整个媒体库，刮削演员信息": "Scanning the entire media library， Scraping actor information"
"# 所有媒体服务器": "#  All media servers"
"# 扫描所有媒体库": "#  Scan all media libraries"
"logger.info(f"开始刮削服务器 {server} 的演员信息 ...")": "logger.info(f" Start scraping servers {server}  Cast information ...")"
"logger.info(f"开始刮削媒体库 {library.name} 的演员信息 ...")": "logger.info(f" Start scraping the media library {library.name}  Cast information ...")"
"logger.info(f"演职人员刮削服务停止")": "logger.info(f" Discontinuation of cast shaving services")"
"# 处理条目": "#  Processing of entries"
"logger.info(f"开始刮削 {item.title} 的演员信息 ...")": "logger.info(f" Start scraping {item.title}  Cast information ...")"
"logger.info(f"{item.title} 的演员信息刮削完成")": "logger.info(f"{item.title}  The actor's information is scraped to completion")"
"logger.info(f"媒体库 {library.name} 的演员信息刮削完成")": "logger.info(f" Media library {library.name}  The actor's information is scraped to completion")"
"logger.info(f"服务器 {server} 的演员信息刮削完成")": "logger.info(f" Server (computer) {server}  The actor's information is scraped to completion")"
"更新媒体服务器中的条目": "Updating entries in the media server"
"# 识别媒体信息": "#  Identify media messages"
"logger.warn(f"{item.title} 未找到tmdbid，无法识别媒体信息")": "logger.warn(f"{item.title}  Not foundtmdbid， Unable to recognize media messages")"
"logger.warn(f"{item.title} 未识别到媒体信息")": "logger.warn(f"{item.title}  No media messages recognized")"
"# 获取豆瓣演员信息": "#  Get douban cast information"
"# 获取媒体项": "#  Get media items"
"logger.warn(f"{item.title} 未找到媒体项")": "logger.warn(f"{item.title}  No media items found")"
"# 处理媒体项中的人物信息": "#  Handling character information in media items"
""Name": "丹尼尔·克雷格",": ""Name": " Daniel (name)· Craig (name)","
"# 更新当前媒体项人物": "#  Updating current media item characters"
"logger.info(f"演职人员刮削服务停止")": "logger.info(f" Discontinuation of cast shaving services")"
"# 保存媒体项信息": "#  Saving media item information"
"# 处理季和集人物": "#  Dealing with season and set characters"
"# 获取季媒体项": "#  Access to seasonal media items"
"logger.warn(f"{item.title} 未找到季媒体项")": "logger.warn(f"{item.title}  Seasonal media items not found")"
"# 获取豆瓣演员信息": "#  Get douban cast information"
"# 如果是Jellyfin，更新季的人物，Emby/Plex季没有人物": "#  If it isJellyfin， Characters of the renewal season，Emby/Plex There are no characters in the season."
"logger.warn(f"{item.title} 未找到季媒体项：{season.get('Id')}")": "logger.warn(f"{item.title}  Seasonal media items not found：{season.get('Id')}")"
"# 更新季媒体项人物": "#  Renewal season media item characters"
"logger.info(f"开始更新季 {seasoninfo.get('Id')} 的人物信息 ...")": "logger.info(f" Start of the renewal season {seasoninfo.get('Id')}  Character information ...")"
"logger.info(f"演职人员刮削服务停止")": "logger.info(f" Discontinuation of cast shaving services")"
"# 更新人物信息": "#  Update character information"
"# 保存季媒体项信息": "#  Preservation of seasonal media item information"
"logger.info(f"季 {seasoninfo.get('Id')} 的人物信息更新完成")": "logger.info(f" Classifier for seasonal crop yield or seasons of a tv series {seasoninfo.get('Id')}  The update of the character information is completed")"
"# 获取集媒体项": "#  Access to media sets"
"logger.warn(f"{item.title} 未找到集媒体项")": "logger.warn(f"{item.title}  No media sets found")"
"# 更新集媒体项人物": "#  Updated set of media items characters"
"# 获取集媒体项详情": "#  Get the details of the media collection"
"logger.warn(f"{item.title} 未找到集媒体项：{episode.get('Id')}")": "logger.warn(f"{item.title}  No media sets found：{episode.get('Id')}")"
"# 更新集媒体项人物": "#  Updated set of media items characters"
"logger.info(f"开始更新集 {episodeinfo.get('Id')} 的人物信息 ...")": "logger.info(f" Start updating episodes {episodeinfo.get('Id')}  Character information ...")"
"logger.info(f"演职人员刮削服务停止")": "logger.info(f" Discontinuation of cast shaving services")"
"# 更新人物信息": "#  Update character information"
"# 保存集媒体项信息": "#  Save set media item information"
"logger.info(f"集 {episodeinfo.get('Id')} 的人物信息更新完成")": "logger.info(f" Classifier for sections of a tv series e.g. episode {episodeinfo.get('Id')}  The update of the character information is completed")"
"更新人物信息，返回替换后的人物信息": "Update character information， Returns the replaced character information"
"获取人物的TMDBID、IMDBID": "Get the character'sTMDBID、IMDBID"
"# 返回的人物信息": "#  Returned character information"
"# 查询媒体库人物详情": "#  Find out more about the people in the media library"
"logger.warn(f"未找到人物 {people.get('Name')} 的信息")": "logger.warn(f" Characters not found {people.get('Name')}  Such information")"
"# 是否更新标志": "#  Whether to update the flag"
"# 从TMDB信息中更新人物信息": "#  Through (a gap)TMDB Update character information in the message"
"# 更新中文名": "#  Update chinese name"
"logger.info(f"{people.get('Name')} 从TMDB获取到中文名：{cn_name}")": "logger.info(f"{people.get('Name')}  Through (a gap)TMDB Get the chinese name：{cn_name}")"
"# 更新中文描述": "#  Updated chinese description"
"logger.info(f"{people.get('Name')} 从TMDB获取到中文描述")": "logger.info(f"{people.get('Name')}  Through (a gap)TMDB Get the chinese description")"
"# 图片": "#  Photograph"
"logger.info(f"{people.get('Name')} 从TMDB获取到图片：{profile_path}")": "logger.info(f"{people.get('Name')}  Through (a gap)TMDB Get the image：{profile_path}")"
"# 从豆瓣信息中更新人物信息": "#  Updating character information from doujinshi"
"# 从豆瓣演员中匹配中文名称、角色和简介": "#  Matching chinese names from douban actors、 Roles and profiles"
"# 名称": "#  Name (of a thing)"
"logger.info(f"{people.get('Name')} 从豆瓣中获取到中文名：{douban_actor.get('name')}")": "logger.info(f"{people.get('Name')}  Get the chinese name from douban：{douban_actor.get('name')}")"
"# 描述": "#  Descriptive"
"logger.info(f"{people.get('Name')} 从豆瓣中获取到中文描述：{douban_actor.get('title')}")": "logger.info(f"{people.get('Name')}  Get the chinese description from douban：{douban_actor.get('title')}")"
"# 饰演角色": "#  Role"
"# "饰 詹姆斯·邦德 James Bond 007"": "# " Impersonate  James (name)· Bond (name) James Bond 007""
"character = re.sub(r"饰\s+", "",": "character = re.sub(r" Impersonate\s+", "","
"character = re.sub("演员", "",": "character = re.sub(" Actor or actress", "","
"logger.info(f"{people.get('Name')} 从豆瓣中获取到饰演角色：{character}")": "logger.info(f"{people.get('Name')}  Getting to play a character from douban：{character}")"
"# 图片": "#  Photograph"
"logger.info(f"{people.get('Name')} 从豆瓣中获取到图片：{avatar.get('large')}")": "logger.info(f"{people.get('Name')}  Getting images from douban：{avatar.get('large')}")"
"# 更新人物图片": "#  Update character pictures"
"logger.info(f"更新人物 {people.get('Name')} 的图片：{profile_path}")": "logger.info(f" Update a character {people.get('Name')}  Pictures：{profile_path}")"
"# 锁定人物信息": "#  Locked character information"
"# 更新人物信息": "#  Update character information"
"logger.info(f"更新人物 {people.get('Name')} 的信息：{personinfo}")": "logger.info(f" Update a character {people.get('Name')}  Such information：{personinfo}")"
"logger.info(f"人物 {people.get('Name')} 未找到中文数据")": "logger.info(f" Character (in a play, novel etc) {people.get('Name')}  No chinese data found")"
"logger.error(f"更新人物信息失败：{err}")": "logger.error(f" Failed to update character information：{err}")"
"获取豆瓣演员信息": "Get douban cast information"
"# 随机休眠1-5秒": "#  Random hibernation1-5 Unit of angle or arc equivalent one sixtieth of a degree"
"# 匹配豆瓣信息": "#  Match douban information"
"# 豆瓣演员": "#  Douban actor"
"获得媒体项详情": "Obtain media item details"
"获得Emby媒体项详情": "AttainmentEmby Media item details"
"logger.error(f"获取Emby媒体项详情失败：{err}")": "logger.error(f" GainEmby Media item details failed：{err}")"
"获得Jellyfin媒体项详情": "AttainmentJellyfin Media item details"
"logger.error(f"获取Jellyfin媒体项详情失败：{err}")": "logger.error(f" GainJellyfin Media item details failed：{err}")"
"获得Plex媒体项详情": "AttainmentPlex Media item details"
"logger.error(f"获取Plex媒体项详情失败：{err}")": "logger.error(f" GainPlex Media item details failed：{err}")"
"获得媒体的所有子媒体项": "Get all submedia items of the media"
"获得Emby媒体的所有子媒体项": "AttainmentEmby All sub-media items of the media"
"logger.error(f"获取Emby媒体的所有子媒体项失败：{err}")": "logger.error(f" GainEmby All submedia items of the media failed：{err}")"
"获得Jellyfin媒体的所有子媒体项": "AttainmentJellyfin All sub-media items of the media"
"logger.error(f"获取Jellyfin媒体的所有子媒体项失败：{err}")": "logger.error(f" GainJellyfin All submedia items of the media failed：{err}")"
"获得Plex媒体的所有子媒体项": "AttainmentPlex All sub-media items of the media"
"logger.error(f"获取Plex媒体的所有子媒体项失败：{err}")": "logger.error(f" GainPlex All submedia items of the media failed：{err}")"
"更新媒体项详情": "Update media item details"
"更新Emby媒体项详情": "UpdateEmby Media item details"
"logger.error(f"更新Emby媒体项详情失败，错误码：{res.status_code}")": "logger.error(f" UpdateEmby Media item details failed， Error code：{res.status_code}")"
"logger.error(f"更新Emby媒体项详情失败：{err}")": "logger.error(f" UpdateEmby Media item details failed：{err}")"
"更新Jellyfin媒体项详情": "UpdateJellyfin Media item details"
"logger.error(f"更新Jellyfin媒体项详情失败，错误码：{res.status_code}")": "logger.error(f" UpdateJellyfin Media item details failed， Error code：{res.status_code}")"
"logger.error(f"更新Jellyfin媒体项详情失败：{err}")": "logger.error(f" UpdateJellyfin Media item details failed：{err}")"
"更新Plex媒体项详情": "UpdatePlex Media item details"
"logger.error(f"更新Plex媒体项详情失败：{err}")": "logger.error(f" UpdatePlex Media item details failed：{err}")"
"更新媒体项图片": "Update media item images"
"下载图片": "Download images"
"logger.info(f"{imageurl} 图片下载失败，请检查网络连通性")": "logger.info(f"{imageurl}  Image download failed， Please check network connectivity")"
"logger.error(f"下载图片失败：{err}")": "logger.error(f" Failed to download image：{err}")"
"更新Emby媒体项图片": "UpdateEmby Pictures of media items"
"logger.error(f"更新Emby媒体项图片失败，错误码：{res.status_code}")": "logger.error(f" UpdateEmby Media item image failure， Error code：{res.status_code}")"
"logger.error(f"更新Emby媒体项图片失败：{result}")": "logger.error(f" UpdateEmby Media item image failure：{result}")"
"更新Jellyfin媒体项图片": "UpdateJellyfin Pictures of media items"
"# FIXME 改为预下载图片": "# FIXME  Change to pre-downloaded images"
"logger.error(f"更新Jellyfin媒体项图片失败，错误码：{res.status_code}")": "logger.error(f" UpdateJellyfin Media item image failure， Error code：{res.status_code}")"
"logger.error(f"更新Jellyfin媒体项图片失败：{err}")": "logger.error(f" UpdateJellyfin Media item image failure：{err}")"
"更新Plex媒体项图片": "UpdatePlex Pictures of media items"
"# FIXME 改为预下载图片": "# FIXME  Change to pre-downloaded images"
"logger.error(f"更新Plex媒体项图片失败：{err}")": "logger.error(f" UpdatePlex Media item image failure：{err}")"
"# 下载图片获取base64": "#  Download image to getbase64"
"获取TMDB别名中的中文名": "GainTMDB Chinese names in aliases"
"# 使用cn2an将繁体转化为简体": "#  Utilizationcn2an Convert traditional chinese to simplified chinese"
"logger.error(f"获取人物中文名失败：{err}")": "logger.error(f" Failed to get character's chinese name：{err}")"
"停止服务": "Discontinuation of services"
