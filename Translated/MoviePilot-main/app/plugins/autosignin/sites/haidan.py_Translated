"海胆签到": "Sea urchin check-in"
"# 匹配的站点Url，每一个实现类都需要设置为自己的站点Url": "#  Matching sitesUrl， Each implementation class needs to be set up as its own siteUrl"
"# 签到成功": "#  Sign in successfully"
"_succeed_regex = ['(?<=value=")已经打卡(?=")']": "_succeed_regex = ['(?<=value=") Already clocked in.(?=")']"
"根据站点Url判断是否匹配当前站点签到类，大部分情况使用默认实现即可": "Based on siteUrl Determine if the current site check-in class matches， In most cases it is sufficient to use the default implementation"
":param url: 站点Url": ":param url:  WebsiteUrl"
":return: 是否匹配，如匹配则会调用该类的signin方法": ":return:  Whether or not it matches， If a match is made then the class'ssignin Methodologies"
"执行签到操作": "Perform check-in operations"
":param site_info: 站点信息，含有站点Url、站点Cookie、UA等信息": ":param site_info:  Site information， Contains siteUrl、 WebsiteCookie、UA And other information"
":return: 签到结果信息": ":return:  Check-in results information"
"# 签到": "#  Sign in"
"logger.error(f"{site} 签到失败，请检查站点连通性")": "logger.error(f"{site}  Failed to sign in， Please check site connectivity")"
"return False, '签到失败，请检查站点连通性'": "return False, ' Failed to sign in， Please check site connectivity'"
"logger.error(f"{site} 签到失败，Cookie失效")": "logger.error(f"{site}  Failed to sign in，Cookie Lose effectiveness")"
"return False, '签到失败，Cookie失效'": "return False, ' Failed to sign in，Cookie Lose effectiveness'"
"logger.info(f"{site} 签到成功")": "logger.info(f"{site}  Sign in successfully")"
"return True, '签到成功'": "return True, ' Sign in successfully'"
"logger.error(f"{site} 签到失败，签到接口返回 {html_text}")": "logger.error(f"{site}  Failed to sign in， Check-in interface returns {html_text}")"
"return False, '签到失败'": "return False, ' Failed to sign in'"
