"如果填写openai key则调用chatgpt获取答案": "If you fill inopenai key Then callchatgpt Get answers"
"否则随机": "Otherwise random"
"# 匹配的站点Url，每一个实现类都需要设置为自己的站点Url": "#  Matching sitesUrl， Each implementation class needs to be set up as its own siteUrl"
"# 已签到": "#  Signed in"
"_sign_regex = ['今天已经签过到了']": "_sign_regex = [' I've already signed in today.']"
"# 签到成功，待补充": "#  Sign in successfully， To be supplemented"
"_success_regex = ['\\d+点魔力值']": "_success_regex = ['\\d+ Point of magic power']"
"根据站点Url判断是否匹配当前站点签到类，大部分情况使用默认实现即可": "Based on siteUrl Determine if the current site check-in class matches， In most cases it is sufficient to use the default implementation"
":param url: 站点Url": ":param url:  WebsiteUrl"
":return: 是否匹配，如匹配则会调用该类的signin方法": ":return:  Whether or not it matches， If a match is made then the class'ssignin Methodologies"
"执行签到操作": "Perform check-in operations"
":param site_info: 站点信息，含有站点Url、站点Cookie、UA等信息": ":param site_info:  Site information， Contains siteUrl、 WebsiteCookie、UA And other information"
":return: 签到结果信息": ":return:  Check-in results information"
"# 判断今日是否已签到": "#  Determine if you have signed in today"
"logger.error(f"{site} 签到失败，请检查站点连通性")": "logger.error(f"{site}  Failed to sign in， Please check site connectivity")"
"return False, '签到失败，请检查站点连通性'": "return False, ' Failed to sign in， Please check site connectivity'"
"logger.error(f"{site} 签到失败，Cookie失效")": "logger.error(f"{site}  Failed to sign in，Cookie Lose effectiveness")"
"return False, '签到失败，Cookie失效'": "return False, ' Failed to sign in，Cookie Lose effectiveness'"
"logger.info(f"今日已签到")": "logger.info(f" Signed in today")"
"return True, '今日已签到'": "return True, ' Signed in today'"
"# 没有签到则解析html": "#  Parsing without signing inhtml"
"return False, '签到失败'": "return False, ' Failed to sign in'"
"# 获取页面问题、答案": "#  Fetch page issues、 Solution"
"question_str = html.xpath("//td[@class='text' and contains(text(),'请问：')]/text()")[0]": "question_str = html.xpath("//td[@class='text' and contains(text(),' Excuse me, may i ask...?：')]/text()")[0]"
"# 正则获取问题": "#  Regular fetch problems"
"match = re.search(r'请问：(.+)', question_str)": "match = re.search(r' Excuse me, may i ask...?：(.+)', question_str)"
"logger.debug(f"获取到签到问题 {question_str}")": "logger.debug(f" Getting to the sign-in question {question_str}")"
"logger.error(f"未获取到签到问题")": "logger.error(f" Not getting the sign-in issue")"
"return False, f"【{site}】签到失败，未获取到签到问题"": "return False, f"【{site}】 Failed to sign in， Not getting the sign-in issue""
"# 正确答案，默认随机，如果gpt返回则用gpt返回的答案提交": "#  Correct answer， Default random， In the event thatgpt Returned withgpt Returned answers submitted"
"# 签到": "#  Sign in"
"签到请求": "Check-in request"
"usercomment: 此刻心情:无": "usercomment:  Current mood: Not have"
"submit: 提交": "submit:  Submit (a report etc)"
"多选会有多个choice[]....": "Multiple choice will have more than onechoice[]...."
"'usercomment': '太难了！',": "'usercomment': ' It's too hard.！',"
"'wantskip': '不会'": "'wantskip': ' Will not (act, happen etc)'"
"logger.debug(f"签到请求参数 {data}")": "logger.debug(f" Check-in request parameters {data}")"
"logger.error(f"{site} 签到失败，签到接口请求失败")": "logger.error(f"{site}  Failed to sign in， Check-in interface request failed")"
"return False, '签到失败，签到接口请求失败'": "return False, ' Failed to sign in， Check-in interface request failed'"
"# 判断是否签到成功": "#  Determine if sign-in is successful"
"logger.info(f"{site} 签到成功")": "logger.info(f"{site}  Sign in successfully")"
"return True, '签到成功'": "return True, ' Sign in successfully'"
"logger.info(f"{site} 今日已签到")": "logger.info(f"{site}  Signed in today")"
"return True, '今日已签到'": "return True, ' Signed in today'"
"logger.error(f"{site} 签到失败，请到页面查看")": "logger.error(f"{site}  Failed to sign in， Please go to page")"
"return False, '签到失败，请到页面查看'": "return False, ' Failed to sign in， Please go to page'"
