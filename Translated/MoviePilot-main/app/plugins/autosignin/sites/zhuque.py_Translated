"ZHUQUE签到": "ZHUQUE Sign in"
"# 匹配的站点Url，每一个实现类都需要设置为自己的站点Url": "#  Matching sitesUrl， Each implementation class needs to be set up as its own siteUrl"
"根据站点Url判断是否匹配当前站点签到类，大部分情况使用默认实现即可": "Based on siteUrl Determine if the current site check-in class matches， In most cases it is sufficient to use the default implementation"
":param url: 站点Url": ":param url:  WebsiteUrl"
":return: 是否匹配，如匹配则会调用该类的signin方法": ":return:  Whether or not it matches， If a match is made then the class'ssignin Methodologies"
"执行签到操作": "Perform check-in operations"
":param site_info: 站点信息，含有站点Url、站点Cookie、UA等信息": ":param site_info:  Site information， Contains siteUrl、 WebsiteCookie、UA And other information"
":return: 签到结果信息": ":return:  Check-in results information"
"# 获取页面html": "#  Get pagehtml"
"logger.error(f"{site} 模拟登录失败，请检查站点连通性")": "logger.error(f"{site}  Simulated login failure， Please check site connectivity")"
"return False, '模拟登录失败，请检查站点连通性'": "return False, ' Simulated login failure， Please check site connectivity'"
"logger.error(f"{site} 模拟登录失败，Cookie失效")": "logger.error(f"{site}  Analog login failure，Cookie Lose effectiveness")"
"return False, '模拟登录失败，Cookie失效'": "return False, ' Simulated login failure，Cookie Lose effectiveness'"
"return False, '模拟登录失败'": "return False, ' Simulated login failure'"
"# 释放技能": "#  Release a skill"
"msg = '失败'": "msg = ' Fail (e.g. experiments)'"
"logger.error(f"模拟登录失败，释放技能失败")": "logger.error(f" Simulated login failure， Failed to release skill")"
"msg = f'成功，获得{bonus}魔力'": "msg = f' Successes， Attainment{bonus} Magic power'"
"logger.info(f'【{site}】模拟登录成功，技能释放{msg}')": "logger.info(f'【{site}】 Successful simulated login， Skill release{msg}')"
"return True, f'模拟登录成功，技能释放{msg}'": "return True, f' Successful simulated login， Skill release{msg}'"
