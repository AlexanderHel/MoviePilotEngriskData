"瓷器签到": "Porcelain check-in"
"# 匹配的站点Url，每一个实现类都需要设置为自己的站点Url": "#  Matching sitesUrl， Each implementation class needs to be set up as its own siteUrl"
"# 已签到": "#  Signed in"
"_sign_regex = ['<a class="label label-default" href="#">已签到</a>']": "_sign_regex = ['<a class="label label-default" href="#"> Signed in</a>']"
"根据站点Url判断是否匹配当前站点签到类，大部分情况使用默认实现即可": "Based on siteUrl Determine if the current site check-in class matches， In most cases it is sufficient to use the default implementation"
":param url: 站点Url": ":param url:  WebsiteUrl"
":return: 是否匹配，如匹配则会调用该类的signin方法": ":return:  Whether or not it matches， If a match is made then the class'ssignin Methodologies"
"执行签到操作": "Perform check-in operations"
":param site_info: 站点信息，含有站点Url、站点Cookie、UA等信息": ":param site_info:  Site information， Contains siteUrl、 WebsiteCookie、UA And other information"
":return: 签到结果信息": ":return:  Check-in results information"
"# 尝试解决瓷器cookie每天签到后过期,只保留hdchina=部分": "#  Trying to solve porcelaincookie Expires after daily check-in, Retain onlyhdchina= Portion"
"# 按照分号进行字符串拆分": "#  String splitting by semicolon"
"# 遍历每个子字符串": "#  Iterate over each substring"
"# 如果子字符串包含"hdchina="，则保留该子字符串": "#  If the substring contains"hdchina="， Then the substring is retained"
"logger.error(f"{site} 签到失败，Cookie失效")": "logger.error(f"{site}  Failed to sign in，Cookie Lose effectiveness")"
"return False, '签到失败，Cookie失效'": "return False, ' Failed to sign in，Cookie Lose effectiveness'"
"# 获取页面html": "#  Get pagehtml"
"logger.error(f"{site} 签到失败，请检查站点连通性")": "logger.error(f"{site}  Failed to sign in， Please check site connectivity")"
"return False, '签到失败，请检查站点连通性'": "return False, ' Failed to sign in， Please check site connectivity'"
"if "login.php" in html_res.text or "阻断页面" in html_res.text:": "if "login.php" in html_res.text or " Blocking page" in html_res.text:"
"logger.error(f"{site} 签到失败，Cookie失效")": "logger.error(f"{site}  Failed to sign in，Cookie Lose effectiveness")"
"return False, '签到失败，Cookie失效'": "return False, ' Failed to sign in，Cookie Lose effectiveness'"
"# 获取新返回的cookie进行签到": "#  Get the newly returnedcookie Check-in"
"# 判断是否已签到": "#  Determine if you are signed in or not"
"logger.info(f"{site} 今日已签到")": "logger.info(f"{site}  Signed in today")"
"return True, '今日已签到'": "return True, ' Signed in today'"
"# 没有签到则解析html": "#  Parsing without signing inhtml"
"return False, '签到失败'": "return False, ' Failed to sign in'"
"logger.error("{site} 签到失败，获取x-csrf失败")": "logger.error("{site}  Failed to sign in， Gainx-csrf Fail (e.g. experiments)")"
"return False, '签到失败'": "return False, ' Failed to sign in'"
"logger.debug(f"获取到x-csrf {x_csrf}")": "logger.debug(f" Getx-csrf {x_csrf}")"
"# 签到": "#  Sign in"
"logger.error(f"{site} 签到失败，签到接口请求失败")": "logger.error(f"{site}  Failed to sign in， Check-in interface request failed")"
"return False, '签到失败，签到接口请求失败'": "return False, ' Failed to sign in， Check-in interface request failed'"
"logger.debug(f"签到返回结果 {sign_dict}")": "logger.debug(f" Check-in returns results {sign_dict}")"
"logger.info(f"{site} 签到成功")": "logger.info(f"{site}  Sign in successfully")"
"return True, '签到成功'": "return True, ' Sign in successfully'"
"# {'state': False, 'msg': '不正确的CSRF / Incorrect CSRF token'}": "# {'state': False, 'msg': ' ErroneousCSRF / Incorrect CSRF token'}"
"logger.error(f"{site} 签到失败，不正确的CSRF / Incorrect CSRF token")": "logger.error(f"{site}  Failed to sign in， ErroneousCSRF / Incorrect CSRF token")"
"return False, '签到失败'": "return False, ' Failed to sign in'"
