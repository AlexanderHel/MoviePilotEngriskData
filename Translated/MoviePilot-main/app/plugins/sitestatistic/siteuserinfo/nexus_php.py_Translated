"默认使用NexusPhp解析": "Default useNexusPhp Analyze"
"解析未读短消息数量": "Parses the number of unread messages"
"logger.debug(f"{self.site_name} 消息原始信息 {message_text}")": "logger.debug(f"{self.site_name}  Original message {message_text}")"
"message_unread_match = re.findall(r"[^Date](信息箱\s*|\(|你有\xa0)(\d+)", message_text)": "message_unread_match = re.findall(r"[^Date]( Message box\s*|\(| You do.\xa0)(\d+)", message_text)"
"# 合并解析，减少额外请求调用": "#  Merger analysis， Reduce additional request calls"
"upload_match = re.search(r"[^总]上[传傳]量?[:：_<>/a-zA-Z-=\"'\s#;]+([\d,.\s]+[KMGTPI]*B)", html_text,": "upload_match = re.search(r"[^ Assemble] First (of multiple parts)[ Pass on] Measure word?[:：_<>/a-zA-Z-=\"'\s#;]+([\d,.\s]+[KMGTPI]*B)", html_text,"
"download_match = re.search(r"[^总子影力]下[载載]量?[:：_<>/a-zA-Z-=\"'\s#;]+([\d,.\s]+[KMGTPI]*B)", html_text,": "download_match = re.search(r"[^ Total subshadow power] Arrive at (a decision, conclusion etc)[ Also] Measure word?[:：_<>/a-zA-Z-=\"'\s#;]+([\d,.\s]+[KMGTPI]*B)", html_text,"
"ratio_match = re.search(r"分享率[:：_<>/a-zA-Z-=\"'\s#;]+([\d,.\s]+)", html_text)": "ratio_match = re.search(r" Sharing rate[:：_<>/a-zA-Z-=\"'\s#;]+([\d,.\s]+)", html_text)"
"# 计算分享率": "#  Calculation of sharing rate"
"# 优先使用页面上的分享率": "#  Prioritize the use of on-page shares"
"leeching_match = re.search(r"(Torrents leeching|下载中)[\u4E00-\u9FA5\D\s]+(\d+)[\s\S]+<", html_text)": "leeching_match = re.search(r"(Torrents leeching| Downloading)[\u4E00-\u9FA5\D\s]+(\d+)[\s\S]+<", html_text)"
"bonus_match = re.search(r"mybonus.[\[\]:：<>/a-zA-Z_\-=\"'\s#;.(使用魔力值豆]+\s*([\d,.]+)[<()&\s]", html_text)": "bonus_match = re.search(r"mybonus.[\[\]:：<>/a-zA-Z_\-=\"'\s#;.( Using magic beans]+\s*([\d,.]+)[<()&\s]", html_text)"
"bonus_match = re.search(r"[魔力值|\]][\[\]:：<>/a-zA-Z_\-=\"'\s#;]+\s*([\d,.]+|\"[\d,.]+\")[<>()&\s]",": "bonus_match = re.search(r"[ Magic power level|\]][\[\]:：<>/a-zA-Z_\-=\"'\s#;]+\s*([\d,.]+|\"[\d,.]+\")[<>()&\s]","
"logger.error(f"{self.site_name} 解析魔力值出错, 错误信息: {err}")": "logger.error(f"{self.site_name}  Error resolving magic value,  Error message: {err}")"
"解析ucoin, 统一转换为铜币": "Analyzeucoin,  Uniform conversion to copper coins"
"做种相关信息": "Seeding information"
":param multi_page: 是否多页数据": ":param multi_page:  Whether multiple pages of data"
":return: 下页地址": ":return:  Next page address"
"# 首页存在扩展链接，使用扩展链接": "#  Extended links exist on the home page， Using extended links"
"# 搜索size列": "#  Look for sth.size Columns"
"' or (text() = "大小")' \": "' or (text() = " Adults and children")' \"
"# 搜索seeders列": "#  Look for sth.seeders Columns"
"' or (text() = "在做种")' \": "' or (text() = " Undergoing cultivation")' \"
"# 如果 table class="torrents"，则增加table[@class="torrents"]": "#  In the event that table class="torrents"， Failing agreementtable[@class="torrents"]"
"# 是否存在下页数据": "#  Existence of next page data"
"next_page_text = html.xpath('//a[contains(.//text(), "下一页") or contains(.//text(), "下一頁")]/@href')": "next_page_text = html.xpath('//a[contains(.//text(), " Next page") or contains(.//text(), " Next page")]/@href')"
"解析用户额外信息，加入时间，等级": "Parsing additional user information， Joining time， Hierarchy"
"# 加入日期": "#  Date of accession"
"'//tr/td[text()="加入日期" or text()="注册日期" or *[text()="加入日期"]]/following-sibling::td[1]//text()'": "'//tr/td[text()=" Date of accession" or text()=" Registration date" or *[text()=" Date of accession"]]/following-sibling::td[1]//text()'"
"'|//div/b[text()="加入日期"]/../text()')": "'|//div/b[text()=" Date of accession"]/../text()')"
"# 做种体积 & 做种数": "#  Seeding volume &  Determinant (math.)"
"# seeding 页面获取不到的话，此处再获取一次": "# seeding  If you can't get the page， Get it again here"
"seeding_sizes = html.xpath('//tr/td[text()="当前上传"]/following-sibling::td[1]//'": "seeding_sizes = html.xpath('//tr/td[text()=" Current upload"]/following-sibling::td[1]//'"
"'table[tr[1][td[4 and text()="尺寸"]]]//tr[position()>1]/td[4]')": "'table[tr[1][td[4 and text()=" Sizes"]]]//tr[position()>1]/td[4]')"
"seeding_seeders = html.xpath('//tr/td[text()="当前上传"]/following-sibling::td[1]//'": "seeding_seeders = html.xpath('//tr/td[text()=" Current upload"]/following-sibling::td[1]//'"
"'table[tr[1][td[5 and text()="做种者"]]]//tr[position()>1]/td[5]//text()')": "'table[tr[1][td[5 and text()=" Breeder"]]]//tr[position()>1]/td[5]//text()')"
"seeding_sizes = html.xpath('//tr/td[text()="做种统计"]/following-sibling::td[1]//text()')": "seeding_sizes = html.xpath('//tr/td[text()=" Do seed counts"]/following-sibling::td[1]//text()')"
"seeding_match = re.search(r"总做种数:\s+(\d+)", seeding_sizes[0], re.IGNORECASE)": "seeding_match = re.search(r" Total number of species:\s+(\d+)", seeding_sizes[0], re.IGNORECASE)"
"seeding_size_match = re.search(r"总做种体积:\s+([\d,.\s]+[KMGTPI]*B)", seeding_sizes[0], re.IGNORECASE)": "seeding_size_match = re.search(r" Total seeding volume:\s+([\d,.\s]+[KMGTPI]*B)", seeding_sizes[0], re.IGNORECASE)"
"修正种子页面链接": "Fix the link to the seed page"
"# 单独的种子页面": "#  Separate seed page"
"# 从JS调用种获取用户ID": "#  Through (a gap)JS The call kind of gets the userID"
"# 分类做种模式": "#  Assortment"
"# 临时屏蔽": "#  Temporary shielding"
"# seeding_url_text = html.xpath('//tr/td[text()="当前做种"]/following-sibling::td[1]'": "# seeding_url_text = html.xpath('//tr/td[text()=" Current crop"]/following-sibling::td[1]'"
"# 等级 获取同一行等级数据，图片格式等级，取title信息，否则取文本信息": "#  Hierarchy  Getting the same row level data， Image format levels， Gettitle Text， Otherwise take a text message"
"user_levels_text = html.xpath('//tr/td[text()="等級" or text()="等级" or *[text()="等级"]]/'": "user_levels_text = html.xpath('//tr/td[text()=" Grade" or text()=" Hierarchy" or *[text()=" Hierarchy"]]/'"
"user_levels_text = html.xpath('//tr/td[text()="等級" or text()="等级"]/'": "user_levels_text = html.xpath('//tr/td[text()=" Grade" or text()=" Hierarchy"]/'"
"'|//tr/td[text()="等級" or text()="等级"]/'": "'|//tr/td[text()=" Grade" or text()=" Hierarchy"]/'"
"user_levels_text = html.xpath('//tr/td[text()="等級" or text()="等级"]/'": "user_levels_text = html.xpath('//tr/td[text()=" Grade" or text()=" Hierarchy"]/'"
"# 是否存在下页数据": "#  Existence of next page data"
"next_page_text = html.xpath('//a[contains(.//text(), "下一页") or contains(.//text(), "下一頁")]/@href')": "next_page_text = html.xpath('//a[contains(.//text(), " Next page") or contains(.//text(), " Next page")]/@href')"
"# 标题": "#  Caption"
"# 消息时间": "#  News time"
"# 消息内容": "#  Message"
"bonus_text = html.xpath('//tr/td[text()="魔力值" or text()="猫粮"]/following-sibling::td[1]/text()')": "bonus_text = html.xpath('//tr/td[text()=" Magic power level" or text()=" Cat food"]/following-sibling::td[1]/text()')"
