"# 插件名称": "#  Plug-in name"
"plugin_name = "消息转发"": "plugin_name = " Message forwarding""
"# 插件描述": "#  Plugin description"
"plugin_desc = "根据正则转发通知到其他WeChat应用。"": "plugin_desc = " Forward notifications based on regularity to otherWeChat Appliance。""
"# 插件图标": "#  Plug-in icons"
"# 主题色": "#  Theme color"
"# 插件版本": "#  Plug-in version"
"# 插件作者": "#  Plug-in authors"
"# 作者主页": "#  Author's homepage"
"# 插件配置项ID前缀": "#  Plug-in configuration itemsID Prefix (linguistics)"
"# 加载顺序": "#  Loading sequence"
"# 可使用的用户级别": "#  Available user levels"
"# 私有属性": "#  Private property"
"# 企业微信发送消息URL": "#  Enterprise wechat send messageURL"
"# 企业微信获取TokenURL": "#  Enterprise wechat getTokenURL"
"# 获取token存库": "#  Gaintoken Stockpile"
"拼装插件配置页面，需要返回两块数据：1、页面配置；2、数据结构": "Assembly plugin configuration page， Two pieces of data need to be returned：1、 Page configuration；2、 Data structure"
"'label': '开启转发'": "'label': ' Enable forwarding'"
"'label': '应用配置',": "'label': ' Application configuration',"
"'placeholder': 'appid:corpid:appsecret（一行一个配置）'": "'placeholder': 'appid:corpid:appsecret（ One line, one configuration）'"
"'label': '正则配置',": "'label': ' Regular configuration',"
"'placeholder': '对应上方应用配置，一行一个，一一对应'": "'placeholder': ' Corresponds to the application configuration above， One in a row， One-to-one correspondence'"
"消息转发": "Message forwarding"
"# 消息体": "#  Message body"
"# 正则匹配": "#  Regular match"
"logger.error("未获取到有效token，请检查配置")": "logger.error(" No validtoken， Please check the configuration")"
"# 发送消息": "#  Send a message"
"获取并存储wechat token": "Get and storewechat token"
"# 解析配置": "#  Parse configuration"
"logger.error(f"{wechat} 应用配置不正确")": "logger.error(f"{wechat}  Incorrect application configuration")"
"# 已过期，重新获取token": "#  Expired， Retrievetoken"
"# 没有token，获取token": "#  Hasn'ttoken， Gaintoken"
"logger.error(f"wechat配置 appid = {appid} 获取token失败，请检查配置")": "logger.error(f"wechat Configure appid = {appid}  Gaintoken Fail (e.g. experiments)， Please check the configuration")"
"获取第i个配置wechat token": "Getting the firsti Configurationwechat token"
"logger.error(f"未获取到第 {index} 条正则对应的wechat应用token，请检查配置")": "logger.error(f" Failure to acquire the first {index}  The rule corresponding to thewechat Appliancetoken， Please check the configuration")"
"# 判断token有效期": "#  Judgementstoken Validity period"
"# 重新获取token": "#  Retrievetoken"
"logger.error(f"wechat配置 appid = {appid} 获取token失败，请检查配置")": "logger.error(f"wechat Configure appid = {appid}  Gaintoken Fail (e.g. experiments)， Please check the configuration")"
"发送文本消息": "Send text message"
":param title: 消息标题": ":param title:  Message title"
":param text: 消息内容": ":param text:  Message"
":param userid: 消息发送对象的ID，为空则发给所有人": ":param userid:  The message sender'sID， If it's empty, send it to everyone."
":return: 发送状态，错误信息": ":return:  Sender state， Error message"
"发送图文消息": "Send a graphic message"
":param title: 消息标题": ":param title:  Message title"
":param text: 消息内容": ":param text:  Message"
":param image_url: 图片地址": ":param image_url:  Image address"
":param userid: 消息发送对象的ID，为空则发给所有人": ":param userid:  The message sender'sID， If it's empty, send it to everyone."
":return: 发送状态，错误信息": ":return:  Sender state， Error message"
"向微信发送请求": "Send a request to wechat"
"logger.info(f"转发消息 {title} 成功")": "logger.info(f" Forward the message {title}  Successes")"
"logger.error(f"转发消息 {title} 失败，错误信息：{ret_json}")": "logger.error(f" Forward the message {title}  Fail (e.g. experiments)， Error message：{ret_json}")"
"logger.info("token已过期，正在重新刷新token重试")": "logger.info("token Expired， Refreshing.token Retry")"
"# 重新获取token": "#  Retrievetoken"
"# 重发请求": "#  Resend request"
"logger.error(f"转发消息 {title} 失败，错误码：{res.status_code}，错误原因：{res.reason}")": "logger.error(f" Forward the message {title}  Fail (e.g. experiments)， Error code：{res.status_code}， Cause of error：{res.reason}")"
"logger.error(f"转发消息 {title} 失败，未获取到返回信息")": "logger.error(f" Forward the message {title}  Fail (e.g. experiments)， Return information not obtained")"
"logger.error(f"转发消息 {title} 异常，错误信息：{err}")": "logger.error(f" Forward the message {title}  Exceptions， Error message：{err}")"
"获取微信Token": "Get wechatToken"
":return： 微信Token": ":return：  MicrosoftToken"
"logger.error(f"{corpid} {appsecret} 获取token失败")": "logger.error(f"{corpid} {appsecret}  Gaintoken Fail (e.g. experiments)")"
"logger.error(f"获取微信access_token失败，错误信息：{e}")": "logger.error(f" Get wechataccess_token Fail (e.g. experiments)， Error message：{e}")"
"退出插件": "Exit plugin"
