"目录监控响应类": "Catalog monitor response class"
"self.sync.event_handler(event=event, text="创建",": "self.sync.event_handler(event=event, text=" Establish","
"self.sync.event_handler(event=event, text="移动",": "self.sync.event_handler(event=event, text=" Mobility","
"# 插件名称": "#  Plug-in name"
"plugin_name = "目录监控"": "plugin_name = " Catalog monitoring""
"# 插件描述": "#  Plugin description"
"plugin_desc = "监控目录文件发生变化时实时整理到媒体库。"": "plugin_desc = " Monitor changes to directory files and organize them in the media library in real time.。""
"# 插件图标": "#  Plug-in icons"
"# 主题色": "#  Theme color"
"# 插件版本": "#  Plug-in version"
"# 插件作者": "#  Plug-in authors"
"# 作者主页": "#  Author's homepage"
"# 插件配置项ID前缀": "#  Plug-in configuration itemsID Prefix (linguistics)"
"# 加载顺序": "#  Loading sequence"
"# 可使用的用户级别": "#  Available user levels"
"# 私有属性": "#  Private property"
"# 模式 compatibility/fast": "#  Paradigm compatibility/fast"
"# 转移方式": "#  Migration pattern"
"# 存储源目录与目的目录关系": "#  Store source and destination directory relationships"
"# 退出事件": "#  Logout event"
"# 清空配置": "#  Clear configuration"
"# 读取配置": "#  Read configuration"
"# 停止现有任务": "#  Discontinuation of existing mandates"
"# 启动任务": "#  Initiate tasks"
"# 格式源目录:目的目录": "#  Format source catalog: Destination catalog"
"# 存储目的目录": "#  Storage destination directory"
"# 检查媒体库目录是不是下载目录的子目录": "#  Check that the media library directory is not a subdirectory of the download directory"
"logger.warn(f"{target_path} 是下载目录 {mon_path} 的子目录，无法监控")": "logger.warn(f"{target_path}  Is the download directory {mon_path}  Subdirectories， Unmonitored")"
"self.systemmessage.put(f"{target_path} 是下载目录 {mon_path} 的子目录，无法监控")": "self.systemmessage.put(f"{target_path}  Is the download directory {mon_path}  Subdirectories， Unmonitored")"
"# 兼容模式，目录同步性能降低且NAS不能休眠，但可以兼容挂载的远程共享目录如SMB": "#  Compatibility mode， Reduced directory synchronization performance andNAS Cannot hibernate， However, it is compatible with mounted remote shared directories such asSMB"
"# 内部处理系统操作类型选择最优解": "#  Selection of the optimal solution for the type of operation of the internal processing system"
"logger.info(f"{mon_path} 的目录监控服务启动")": "logger.info(f"{mon_path}  The catalog monitoring service starts")"
"f"目录监控服务启动出现异常：{err_msg}，请在宿主机上（不是docker容器内）执行以下命令并重启："": "f" Abnormal startup of the catalog monitoring service：{err_msg}， On the host computer, please（ Faultdocker Container） Execute the following command and reboot：""
"logger.error(f"{mon_path} 启动目录监控失败：{err_msg}")": "logger.error(f"{mon_path}  Failed to start directory monitoring：{err_msg}")"
"self.systemmessage.put(f"{mon_path} 启动目录监控失败：{err_msg}")": "self.systemmessage.put(f"{mon_path}  Failed to start directory monitoring：{err_msg}")"
"# 追加入库消息统一发送服务": "#  Harmonized service for the delivery of additional inbound messages"
"# 启动服务": "#  Starting services"
"处理文件变化": "Processing of document changes"
":param event: 事件": ":param event:  Event"
":param mon_path: 监控目录": ":param mon_path:  Monitor catalog"
":param text: 事件描述": ":param text:  Event description"
":param event_path: 事件文件路径": ":param event_path:  Event file path"
"# 文件发生变化": "#  Changes in documentation"
"logger.debug("文件%s：%s" % (text, event_path))": "logger.debug(" File%s：%s" % (text, event_path))"
"# 全程加锁": "#  Fully locked"
"logger.debug("文件已处理过：%s" % event_path)": "logger.debug(" Documentation has been processed：%s" % event_path)"
"# 回收站及隐藏的文件不处理": "#  Recycle bin and hidden files not handled"
"logger.debug(f"{event_path} 是回收站或隐藏的文件")": "logger.debug(f"{event_path}  It's the recycle bin or hidden files")"
"# 命中过滤关键字不处理": "#  Hit filter keywords are not processed"
"logger.info(f"{event_path} 命中过滤关键字 {keyword}，不处理")": "logger.info(f"{event_path}  Hit filter keywords {keyword}， Not dealt with")"
"# 整理屏蔽词不处理": "#  Sorting out blocked words not dealt with"
"logger.info(f"{event_path} 命中整理屏蔽词 {keyword}，不处理")": "logger.info(f"{event_path}  Hit listener's blocking words (computing) {keyword}， Not dealt with")"
"# 不是媒体文件不处理": "#  Not media files are not processed"
"logger.debug(f"{event_path} 不是媒体文件")": "logger.debug(f"{event_path}  It's not a media file.")"
"# 查询历史记录，已转移的不处理": "#  Query history， Transferred not processed"
"logger.info(f"{event_path} 已整理过")": "logger.info(f"{event_path}  Organized.")"
"# 元数据": "#  Metadata"
"logger.error(f"{file_path.name} 无法识别有效信息")": "logger.error(f"{file_path.name}  Unable to recognize valid information")"
"# 查询转移目的目录": "#  Query the transfer destination directory"
"# 识别媒体信息": "#  Identify media messages"
"logger.warn(f'未识别到媒体信息，标题：{file_meta.name}')": "logger.warn(f' No media messages recognized， Caption：{file_meta.name}')"
"title=f"{file_path.name} 未识别到媒体信息，无法入库！"": "title=f"{file_path.name}  No media messages recognized， Out of stock！""
"# 新增转移成功历史记录": "#  Add transfer success history"
"# 如果未开启新增已入库媒体是否跟随TMDB信息变化则根据tmdbid查询之前的title": "#  If not enabled does the new inbound media follow theTMDB Information changes are then based ontmdbid Query the previoustitle"
"logger.info(f"{file_path.name} 识别为：{mediainfo.type.value} {mediainfo.title_year}")": "logger.info(f"{file_path.name}  Identify as：{mediainfo.type.value} {mediainfo.title_year}")"
"# 更新媒体图片": "#  Updating media images"
"# 获取集数据": "#  Getting set data"
"# 获取downloadhash": "#  Gaindownloadhash"
"# 转移": "#  Divert or distract (attention etc)"
"logger.error("文件转移模块运行失败")": "logger.error(" Failure to run the file transfer module")"
"# 转移失败": "#  Transfer failure"
"logger.warn(f"{file_path.name} 入库失败：{transferinfo.message}")": "logger.warn(f"{file_path.name}  Failure to stock：{transferinfo.message}")"
"# 新增转移失败历史记录": "#  Added transfer failure history"
"title=f"{mediainfo.title_year}{file_meta.season_episode} 入库失败！",": "title=f"{mediainfo.title_year}{file_meta.season_episode}  Failure to stock！","
"text=f"原因：{transferinfo.message or '未知'}",": "text=f" Rationale：{transferinfo.message or ' Uncharted'}","
"# 新增转移成功历史记录": "#  Add transfer success history"
"# 刮削单个文件": "#  Scraping of individual documents"
"# 发送消息汇总": "#  Send message summary"
"# 汇总刷新媒体库": "#  Aggregate refresh media library"
"# 广播事件": "#  Broadcasting incident"
"# 移动模式删除空目录": "#  Remove empty directories in mobile mode"
"# 重要，删除到监控目录为止": "#  Critical， Delete until you reach the monitoring directory"
"logger.warn(f"移动模式，删除空目录：{file_dir}")": "logger.warn(f" Mobile mode， Delete empty directories：{file_dir}")"
"logger.error("目录监控发生错误：%s - %s" % (str(e), traceback.format_exc()))": "logger.error(" An error occurred in catalog monitoring：%s - %s" % (str(e), traceback.format_exc()))"
"定时检查是否有媒体处理完，发送统一消息": "Regularly check to see if any media has been processed， Send unified messages"
"# 遍历检查是否已刮削完，发送消息": "#  Iterate to check if scraping is complete， Send a message"
"logger.info(f"开始处理媒体 {medis_title_year_season} 消息")": "logger.info(f" Start processing media {medis_title_year_season}  Messages")"
"# 获取最后更新时间": "#  Get last update time"
"# 判断最后更新时间距现在是已超过5秒，超过则发送消息": "#  Determine if the last update is more than5 Unit of angle or arc equivalent one sixtieth of a degree， If exceeded, a message is sent"
"# 发送通知": "#  Send notification"
"# 汇总处理文件总大小": "#  Aggregate total size of processed documents"
"# 剧集汇总": "#  Episode summary"
"# 汇总处理文件数量": "#  Summary of the number of documents processed"
"# 剧集季集信息 S01 E01-E04 || S01 E01、E02、E04": "#  Episode season information S01 E01-E04 || S01 E01、E02、E04"
"# 处理文件多，说明是剧集，显示季入库消息": "#  High number of documents processed， Description is episodic， Show seasonal inventory news"
"# 季集文本": "#  Quarterly texts"
"# 发送消息": "#  Send a message"
"# 发送完消息，移出key": "#  After sending the message， Move outkey"
"从表中获取download_hash，避免连接下载器": "Get from tabledownload_hash， Avoid connecting to the downloader"
"'label': '启用插件',": "'label': ' Enabling plug-ins',"
"'label': '发送通知',": "'label': ' Send notification',"
"'label': '监控模式',": "'label': ' Monitoring mode',"
"{'title': '兼容模式', 'value': 'compatibility'},": "{'title': ' Compatibility mode', 'value': 'compatibility'},"
"{'title': '性能模式', 'value': 'fast'}": "{'title': ' Performance mode', 'value': 'fast'}"
"'label': '转移方式',": "'label': ' Migration pattern',"
"{'title': '移动', 'value': 'move'},": "{'title': ' Mobility', 'value': 'move'},"
"{'title': '复制', 'value': 'copy'},": "{'title': ' Make a copy of', 'value': 'copy'},"
"{'title': '硬链接', 'value': 'link'},": "{'title': ' Hard link', 'value': 'link'},"
"{'title': '软链接', 'value': 'softlink'}": "{'title': ' Soft link (computing)', 'value': 'softlink'}"
"'label': '监控目录',": "'label': ' Monitor catalog',"
"'placeholder': '每一行一个目录，支持两种配置方式：\n'": "'placeholder': ' One directory per line， Two configuration methods are supported：\n'"
"'监控目录\n'": "' Monitor catalog\n'"
"'监控目录:转移目的目录（需同时在媒体库目录中配置该目的目录）'": "' Monitor catalog: Transfer purpose catalog（ You must also configure the destination directory in the media library directory.）'"
"'label': '排除关键词',": "'label': ' Exclude keywords',"
"'placeholder': '每一行一个关键词'": "'placeholder': ' One keyword per line'"
"退出插件": "Exit plugin"
