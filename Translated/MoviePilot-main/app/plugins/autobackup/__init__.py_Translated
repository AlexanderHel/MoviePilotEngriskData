"# 插件名称": "#  Plug-in name"
"plugin_name = "自动备份"": "plugin_name = " Automatic backup""
"# 插件描述": "#  Plugin description"
"plugin_desc = "自动备份数据和配置文件。"": "plugin_desc = " Automatic backup of data and configuration files。""
"# 插件图标": "#  Plug-in icons"
"# 主题色": "#  Theme color"
"# 插件版本": "#  Plug-in version"
"# 插件作者": "#  Plug-in authors"
"# 作者主页": "#  Author's homepage"
"# 插件配置项ID前缀": "#  Plug-in configuration itemsID Prefix (linguistics)"
"# 加载顺序": "#  Loading sequence"
"# 可使用的用户级别": "#  Available user levels"
"# 私有属性": "#  Private property"
"# 任务执行间隔": "#  Task execution interval"
"# 定时器": "#  Timers"
"# 停止现有任务": "#  Discontinuation of existing mandates"
"# 加载模块": "#  Load modules"
"# 定时服务": "#  Time service"
"name="自动备份")": "name=" Automatic backup")"
"logger.error(f"定时任务配置错误：{err}")": "logger.error(f" Timed task configuration error：{err}")"
"logger.info(f"自动备份服务启动，立即运行一次")": "logger.info(f" Automatic backup service starts， Run one immediately")"
"name="自动备份")": "name=" Automatic backup")"
"# 关闭一次性开关": "#  Turn off the disposable switch"
"# 启动任务": "#  Initiate tasks"
"自动备份、删除备份": "Automatic backup、 Delete backup"
"logger.info(f"当前时间 {time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))} 开始备份")": "logger.info(f" Current time {time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(time.time()))}  Start backup")"
"# docker用默认路径": "# docker Use the default path"
"# 备份": "#  Backing up"
"logger.info(f"备份完成 备份文件 {zip_file} ")": "logger.info(f" Backup complete  Backup file {zip_file} ")"
"logger.error("创建备份失败")": "logger.error(" Failed to create backup")"
"# 清理备份": "#  Clean up your backups"
"# 获取指定路径下所有以"bk"开头的文件，按照创建时间从旧到新排序": "#  Get all the files under the specified path that start with"bk" Documents beginning with， Sort by creation time from oldest to newest"
"# 计算需要删除的文件数": "#  Calculate the number of files to be deleted"
"f"获取到 {bk_path} 路径下备份文件数量 {bk_cnt} 保留数量 {int(self._cnt)} 需要删除备份文件数量 {del_cnt}")": "f" Get {bk_path}  Number of backup files under path {bk_cnt}  Number of reservations {int(self._cnt)}  Number of backup files to be deleted {del_cnt}")"
"# 遍历并删除最旧的几个备份": "#  Iterate through and delete the oldest few backups"
"logger.debug(f"删除备份文件 {files[i]} 成功")": "logger.debug(f" Deleting backup files {files[i]}  Successes")"
"f"获取到 {bk_path} 路径下备份文件数量 {bk_cnt} 保留数量 {int(self._cnt)} 无需删除")": "f" Get {bk_path}  Number of backup files under path {bk_cnt}  Number of reservations {int(self._cnt)}  No need to delete")"
"# 发送通知": "#  Send notification"
"title="【自动备份任务完成】",": "title="【 Automatic backup task completion】","
"text=f"创建备份{'成功' if zip_file else '失败'}\n"": "text=f" Creating a backup{' Successes' if zip_file else ' Fail (e.g. experiments)'}\n""
"f"清理备份数量 {del_cnt}\n"": "f" Clean up the number of backups {del_cnt}\n""
"f"剩余备份数量 {bk_cnt - del_cnt}")": "f" Number of remaining backups {bk_cnt - del_cnt}")"
"@param bk_path     自定义备份路径": "@param bk_path      Customizing the backup path"
"# 创建备份文件夹": "#  Creating a backup folder"
"# 把现有的相关文件进行copy备份": "#  Take existing relevant documents andcopy Backing up"
"拼装插件配置页面，需要返回两块数据：1、页面配置；2、数据结构": "Assembly plugin configuration page， Two pieces of data need to be returned：1、 Page configuration；2、 Data structure"
"'label': '启用插件',": "'label': ' Enabling plug-ins',"
"'label': '开启通知',": "'label': ' Open notification',"
"'label': '立即运行一次',": "'label': ' Run one immediately',"
"'label': '备份周期'": "'label': ' Backup cycle'"
"'label': '最大保留备份数'": "'label': ' Maximum number of retained backups'"
"'text': '备份文件路径默认为本地映射的config/plugins/AutoBackup。'": "'text': ' The backup file path defaults to the locally mappedconfig/plugins/AutoBackup。'"
"退出插件": "Exit plugin"
"logger.error("退出插件失败：%s" % str(e))": "logger.error(" Failed to exit the plugin：%s" % str(e))"
