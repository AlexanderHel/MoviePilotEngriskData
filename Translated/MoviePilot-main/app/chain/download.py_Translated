"下载处理链": "Download processing chain"
"发送添加下载的消息": "Send message to add download"
"msg_text = f"用户：{userid}"": "msg_text = f" Subscribers：{userid}""
"msg_text = f"{msg_text}\n站点：{torrent.site_name}"": "msg_text = f"{msg_text}\n Website：{torrent.site_name}""
"msg_text = f"{msg_text}\n质量：{meta.resource_term}"": "msg_text = f"{msg_text}\n Mass (in physics)：{meta.resource_term}""
"msg_text = f"{msg_text}\n大小：{size}"": "msg_text = f"{msg_text}\n Adults and children：{size}""
"msg_text = f"{msg_text}\n种子：{torrent.title}"": "msg_text = f"{msg_text}\n Torrent：{torrent.title}""
"msg_text = f"{msg_text}\n发布时间：{torrent.pubdate}"": "msg_text = f"{msg_text}\n Release time：{torrent.pubdate}""
"msg_text = f"{msg_text}\n做种数：{torrent.seeders}"": "msg_text = f"{msg_text}\n Determinant (math.)：{torrent.seeders}""
"msg_text = f"{msg_text}\n促销：{torrent.volume_factor}"": "msg_text = f"{msg_text}\n Promote：{torrent.volume_factor}""
"msg_text = f"{msg_text}\nHit&Run：是"": "msg_text = f"{msg_text}\nHit&Run： Be""
"msg_text = f"{msg_text}\n描述：{torrent.description}"": "msg_text = f"{msg_text}\n Descriptive：{torrent.description}""
"f"{meta.season_episode} 开始下载",": "f"{meta.season_episode}  Start download","
"下载种子文件，如果是磁力链，会返回磁力链接本身": "Download seed file， If it's a magnetic chain， Will return to the magnet link itself"
":return: 种子路径，种子目录名，种子文件清单": ":return:  Seed path， Seed catalog name， List of seed documents"
"获取下载链接， url格式：[base64]url": "Get the download link， url Specification：[base64]url"
"# 获取[]中的内容": "#  Gain[] Hit the nail on the head"
"# 参数": "#  Parameters"
"# 解码参数": "#  Decoding parameter"
"# GET请求": "# GET Requesting"
"# POST请求": "# POST Requesting"
"logger.info(f"获取到下载地址：{data}")": "logger.info(f" Get to the download address：{data}")"
"# 获取下载链接": "#  Get the download link"
"# 需要解码获取下载地址": "#  Need to decode to get the download address"
"logger.error(f"{torrent.title} 无法获取下载地址：{torrent.enclosure}！")": "logger.error(f"{torrent.title}  Unable to get the download address：{torrent.enclosure}！")"
"# 下载种子文件": "#  Download seed file"
"# 磁力链": "#  Magnetic link"
"logger.error(f"下载种子文件失败：{torrent.title} - {torrent_url}")": "logger.error(f" Failed to download seed file：{torrent.title} - {torrent_url}")"
"title=f"{torrent.title} 种子下载失败！",": "title=f"{torrent.title}  Seed download failed！","
"text=f"错误信息：{error_msg}\n站点：{torrent.site_name}",": "text=f" Error message：{error_msg}\n Website：{torrent.site_name}","
"# 返回 种子文件路径，种子目录名，种子文件清单": "#  Come (or go) back  Seed file path， Seed catalog name， List of seed documents"
"下载及发送通知": "Download & send notification"
":param context: 资源上下文": ":param context:  Resource context"
":param torrent_file: 种子文件路径": ":param torrent_file:  Seed file path"
":param episodes: 需要下载的集数": ":param episodes:  Number of episodes to download"
":param channel: 通知渠道": ":param channel:  Notification channels"
":param save_path: 保存路径": ":param save_path:  Save path"
":param userid: 用户ID": ":param userid:  SubscribersID"
"# 下载种子文件，得到的可能是文件也可能是磁力链": "#  Download seed file， What you get could be a file or a magnet link."
"# 获取种子文件的文件夹名和文件清单": "#  Get the folder name and file list of the seed file"
"# 下载目录": "#  Download catalog"
"# 开启下载二级目录": "#  Enable download secondary catalog"
"# 电影": "#  Cinematic"
"# 动漫": "#  Cartoons and comics"
"# 电视剧": "#  Dramas"
"# 未开启下载二级目录": "#  Downloading secondary directories is not enabled"
"# 电影": "#  Cinematic"
"# 动漫": "#  Cartoons and comics"
"# 电视剧": "#  Dramas"
"# 未识别": "#  Unidentified"
"# 自定义下载目录": "#  Customize the download directory"
"# 添加下载": "#  Add download"
"_hash, error_msg = None, "未知错误"": "_hash, error_msg = None, " Unknown error""
"# 下载文件路径": "#  Download file path"
"# 登记下载记录": "#  Register to download records"
"# 登记下载文件": "#  Register to download files"
"# 识别文件集": "#  Identify the set of documents"
"# 发送消息": "#  Send a message"
"# 下载成功后处理": "#  Processing after successful download"
"# 广播事件": "#  Broadcasting incident"
"# 下载失败": "#  Failed to download"
"logger.error(f"{_media.title_year} 添加下载任务失败："": "logger.error(f"{_media.title_year}  Failed to add download task：""
"title="添加下载任务失败：%s %s"": "title=" Failed to add download task：%s %s""
"text=f"站点：{_torrent.site_name}\n"": "text=f" Website：{_torrent.site_name}\n""
"f"种子名称：{_meta.org_string}\n"": "f" Seed name：{_meta.org_string}\n""
"f"错误信息：{error_msg}",": "f" Error message：{error_msg}","
"根据缺失数据，自动种子列表中组合择优下载": "Based on missing data， Combination of auto-seeded lists for optimal download"
":param contexts:  资源上下文列表": ":param contexts:   Resource context list"
":param no_exists:  缺失的剧集信息": ":param no_exists:   Missing episode information"
":param save_path:  保存路径": ":param save_path:   Save path"
":param channel:  通知渠道": ":param channel:   Notification channels"
":param userid:  用户ID": ":param userid:   SubscribersID"
":return: 已经下载的资源列表、剩余未下载到的剧集 no_exists[tmdb_id] = {season: NotExistMediaInfo}": ":return:  List of downloaded resources、 Remaining episodes not yet downloaded no_exists[tmdb_id] = {season: NotExistMediaInfo}"
"# 已下载的项目": "#  Downloaded items"
"更新need_tvs季数，返回剩余季数": "Updateneed_tvs Quarter， Return to remaining quarters"
":param _need: 需要下载的季数": ":param _need:  Number of seasons to download"
":param _current: 已经下载的季数": ":param _current:  Seasons downloaded"
"# 剩余季数": "#  Number of seasons remaining"
"# 清除已下载的季信息": "#  Clear downloaded season information"
"更新need_tvs集数，返回剩余集数": "Updateneed_tvs Episode number (of a tv series etc)， Returns the number of remaining episodes"
":param _sea: 季数": ":param _sea:  Quarter"
":param _need: 需要下载的集数": ":param _need:  Number of episodes to download"
":param _current: 已经下载的集数": ":param _current:  Episodes downloaded"
"# 剩余集数": "#  Remaining number of episodes"
"获取需要的季的集数": "Get the number of episodes for the desired season"
"# 分组排序": "#  Grouping and sorting"
"# 如果是电影，直接下载": "#  If it's a movie.， Direct download"
"# 下载成功": "#  Download successfully"
"# 电视剧整季匹配": "#  Tv series matching whole season"
"# 先把整季缺失的拿出来，看是否刚好有所有季都满足的种子 {tmdbid: [seasons]}": "#  Let's take out the missing ones for the whole season， See if there happens to be a seed that satisfies all the seasons {tmdbid: [seasons]}"
"# 季列表为空的，代表全季缺失": "#  Quarterly lists are empty， Representing a full-season absence"
"# 查找整季包含的种子，只处理整季没集的种子或者是集数超过季的种子": "#  Find seeds contained throughout the season， Process only seeds that have no episodes in the entire season or have more than one episode in the season"
"# 循环种子": "#  Seed cycling"
"# 媒体信息": "#  Media information"
"# 识别元数据": "#  Identifying metadata"
"# 种子信息": "#  Seed information"
"# 排除电视剧": "#  Exclusion of tv series"
"# 种子的季清单": "#  Seasonal list of seeds"
"# 种子有集的不要": "#  Don't seed it with a set."
"# 匹配TMDBID": "#  MatchTMDBID"
"# 种子季是需要季或者子集": "#  Seed seasons are needed for seasons or subsets"
"# 只有一季的可能是命名错误，需要打开种子鉴别，只有实际集数大于等于总集数才下载": "#  Only one season could be a misnomer， Seeds need to be opened for identification， Download only if the actual number of episodes is greater than or equal to the total number of episodes."
"logger.warn(f"{meta.org_string} 下载地址是磁力链，无法确定种子文件集数")": "logger.warn(f"{meta.org_string}  The download address is a magnet link， Unable to determine the number of seed file episodes")"
"logger.info(f"{meta.org_string} 解析文件集数为 {torrent_episodes}")": "logger.info(f"{meta.org_string}  The number of parsed file sets is {torrent_episodes}")"
"# 总集数": "#  Total episodes"
"# 更新集数范围": "#  Updated episode range"
"f"{meta.org_string} 解析文件集数发现不是完整合集")": "f"{meta.org_string}  Parsing the number of file episodes reveals that it is not a complete collection")"
"# 下载": "#  Downloading"
"# 下载": "#  Downloading"
"# 下载成功": "#  Download successfully"
"# 更新仍需季集": "#  Updates still need seasonal episodes"
"# 电视剧季内的集匹配": "#  Matching episodes within a tv season"
"# TMDBID列表": "# TMDBID Listings"
"# 循环每一季": "#  Cycle through each season"
"# 当前需要季": "#  Current needs season"
"# 当前需要集": "#  Current needs set"
"# TMDB总集数": "# TMDB Total episodes"
"# 需要开始集": "#  Need to start the set"
"# 缺失整季的转化为缺失集进行比较": "#  Missing whole seasons are converted to missing sets for comparison"
"# 循环种子": "#  Seed cycling"
"# 媒体信息": "#  Media information"
"# 识别元数据": "#  Identifying metadata"
"# 非剧集不处理": "#  Non-episodes not processed"
"# 匹配TMDB": "#  MatchTMDB"
"# 不重复添加": "#  No duplicate additions"
"# 种子季": "#  Seed season"
"# 只处理单季含集的种子": "#  Only single-season seeds containing aggregates are treated"
"# 种子集列表": "#  Seed set list"
"# 整季的不处理": "#  No treatment for the whole season"
"# 为需要集的子集则下载": "#  Is a subset of the required set then download"
"# 下载": "#  Downloading"
"# 下载成功": "#  Download successfully"
"# 更新仍需集数": "#  Update still needs episodes"
"# 仍然缺失的剧集，从整季中选择需要的集数文件下载，仅支持QB和TR": "#  Episodes still missing， Select the desired episode file to download from the entire season， Support onlyQB Cap (a poem)TR"
"# TMDBID列表": "# TMDBID Listings"
"# 需要季列表": "#  Need season listings"
"# 循环需要季": "#  Cycling requires seasons"
"# 当前需要季": "#  Current needs season"
"# 当前需要集": "#  Current needs set"
"# 没有集的不处理": "#  No set is not processed"
"# 循环种子": "#  Seed cycling"
"# 媒体信息": "#  Media information"
"# 识别元数据": "#  Identifying metadata"
"# 种子信息": "#  Seed information"
"# 非剧集不处理": "#  Non-episodes not processed"
"# 不重复添加": "#  No duplicate additions"
"# 没有需要集后退出": "#  Exit when no set is needed"
"# 选中一个单季整季的或单季包括需要的所有集的": "#  Select a single full season or a single season that includes all the episodes needed for the"
"# 检查种子看是否有需要的集": "#  Check the seeds to see if there are any needed sets"
"logger.warn(f"{meta.org_string} 下载地址是磁力链，无法解析种子文件集数")": "logger.warn(f"{meta.org_string}  The download address is a magnet link， Unable to parse seed file episodes")"
"# 种子全部集": "#  Seeds all sets"
"logger.info(f"{torrent.site_name} - {meta.org_string} 解析文件集数：{torrent_episodes}")": "logger.info(f"{torrent.site_name} - {meta.org_string}  Number of parsed file sets：{torrent_episodes}")"
"# 选中的集": "#  Selected set"
"logger.info(f"{torrent.site_name} - {torrent.title} 没有需要的集，跳过...")": "logger.info(f"{torrent.site_name} - {torrent.title}  There are no required sets， Skip over...")"
"logger.info(f"{torrent.site_name} - {torrent.title} 选中集数：{selected_episodes}")": "logger.info(f"{torrent.site_name} - {torrent.title}  Number of selected episodes：{selected_episodes}")"
"# 添加下载": "#  Add download"
"# 把识别的集更新到上下文": "#  Update recognized sets to the context"
"# 下载成功": "#  Download successfully"
"# 更新仍需集数": "#  Update still needs episodes"
"# 返回下载的资源，剩下没下完的": "#  Return to downloaded resources， That's all that's left."
"检查媒体库，查询是否存在，对于剧集同时返回不存在的季集信息": "Check the media library， Query the existence of， For episodes that also return non-existent seasonal episode information"
":param meta: 元数据": ":param meta:  Metadata"
":param mediainfo: 已识别的媒体信息": ":param mediainfo:  Identified media information"
":param no_exists: 在调用该方法前已经存储的不存在的季集信息，有传入时该函数搜索的内容将会叠加后输出": ":param no_exists:  Non-existing seasonal set information that has been stored prior to calling this method， When passed in, the function searches for content that will be overlaid on the output"
":param totals: 电视剧每季的总集数": ":param totals:  Total number of episodes per season of a tv series"
":return: 当前媒体是否缺失，各标题总的季集和缺失的季集": ":return:  Is the current media missing， Total seasonal episodes and missing seasonal episodes for each title"
"添加不存在的季集信息": "Adding non-existent season set information"
"# 电影": "#  Cinematic"
"logger.info(f"媒体库中已存在电影：{mediainfo.title_year}")": "logger.info(f" Movies already in the media library：{mediainfo.title_year}")"
"# 补充媒体信息": "#  Additional media information"
"logger.error(f"媒体信息识别失败！")": "logger.error(f" Media message recognition failure！")"
"logger.error(f"媒体信息中没有季集信息：{mediainfo.title_year}")": "logger.error(f" Season set information is not available in the media information：{mediainfo.title_year}")"
"# 电视剧": "#  Dramas"
"# 媒体库已存在的剧集": "#  Episodes already in the media library"
"# 所有季集均缺失": "#  All seasons are missing"
"# 全季不存在": "#  All seasons don't exist."
"# 总集数": "#  Total episodes"
"# 存在一些，检查每季缺失的季集": "#  There are a number of， Check for missing seasonal episodes for each season"
"# 该季总集数": "#  Total episodes for the season"
"# 该季已存在的集": "#  The season's pre-existing episodes"
"# 已存在取差集": "#  Already exists to take the difference set"
"# 按总集数计算缺失集（开始集为TMDB中的最小集）": "#  Missing episodes by total episodes（ The starting set isTMDB The smallest set in the）"
"# 按TMDB集数计算缺失集": "#  Check or refer toTMDB Set counting missing sets"
"# 全部集存在": "#  Full set exists"
"# 添加不存在的季集信息": "#  Adding non-existent season set information"
"# 全季不存在": "#  All seasons don't exist."
"# 存在不完整的剧集": "#  Existence of incomplete episodes"
"logger.debug(f"媒体库中已存在部分剧集，缺失：{no_exists}")": "logger.debug(f" Selected episodes already exist in the media library， Deficiencies：{no_exists}")"
"# 全部存在": "#  Fully present"
"查询正在下载的任务，并发送消息": "Query tasks being downloaded， And send a message"
"title="没有正在下载的任务！",": "title=" No tasks being downloaded！","
"# 发送消息": "#  Send a message"
"title = f"共 {len(torrents)} 个任务正在下载："": "title = f" Common {len(torrents)}  Tasks are being downloaded.：""
"查询正在下载的任务": "Query tasks being downloaded"
"控制下载任务 start/stop": "Controlling download tasks start/stop"
"删除下载任务": "Delete download tasks"
