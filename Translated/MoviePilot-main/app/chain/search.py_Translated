"站点资源搜索处理链": "Site resource search processing chain"
"根据TMDB ID搜索资源，精确匹配，但不不过滤本地存在的资源": "According toTMDB ID Search resources， Exact match， But not without filtering locally available resources"
":param mtype: 媒体，电影 or 电视剧": ":param mtype:  Media, esp. news media， Cinematic or  Dramas"
":param area: 搜索范围，title or imdbid": ":param area:  Search scope，title or imdbid"
"logger.error(f'{tmdbid} 媒体信息识别失败！')": "logger.error(f'{tmdbid}  Media message recognition failure！')"
"# 保存眲结果": "#  Saving results"
"根据标题搜索资源，不识别不过滤，直接返回站点内容": "Search for resources by title， No recognition or filtering， Direct return to site content"
":param title: 标题，为空时返回所有站点首页内容": ":param title:  Caption， Returns all site home contents when empty"
":param page: 页码": ":param page:  Pagination"
":param site: 站点ID": ":param site:  WebsiteID"
"logger.info(f'开始搜索资源，关键词：{title} ...')": "logger.info(f' Start searching for resources， Byword：{title} ...')"
"logger.info(f'开始浏览资源，站点：{site} ...')": "logger.info(f' Start browsing resources， Website：{site} ...')"
"# 搜索": "#  Look for sth."
"获取上次搜索结果": "Get last search results"
"根据媒体信息搜索种子资源，精确匹配，应用过滤规则，同时根据no_exists过滤本地已存在的资源": "Search for seed resources based on media information， Exact match， Apply filtering rules， At the same time, according tono_exists Filtering resources that already exist locally"
":param mediainfo: 媒体信息": ":param mediainfo:  Media information"
":param keyword: 搜索关键词": ":param keyword:  Search keywords"
":param no_exists: 缺失的媒体信息": ":param no_exists:  Missing media messages"
":param sites: 站点ID列表，为空时搜索所有站点": ":param sites:  WebsiteID Listings， Search all sites when empty"
":param priority_rule: 优先级规则，为空时使用搜索优先级规则": ":param priority_rule:  Priority rules， Use search prioritization rules when empty"
":param filter_rule: 过滤规则，为空是使用默认过滤规则": ":param filter_rule:  Filter rules， Null is to use the default filtering rules"
":param area: 搜索范围，title or imdbid": ":param area:  Search scope，title or imdbid"
"logger.info(f'开始搜索资源，关键词：{keyword or mediainfo.title} ...')": "logger.info(f' Start searching for resources， Byword：{keyword or mediainfo.title} ...')"
"# 补充媒体信息": "#  Additional media information"
"logger.error(f'媒体信息识别失败！')": "logger.error(f' Media message recognition failure！')"
"# 缺失的季集": "#  Missing seasonal episodes"
"# 过滤剧集": "#  Filter episodes"
"# 搜索关键词": "#  Search keywords"
"# 执行搜索": "#  Perform a search"
"logger.warn(f'{keyword or mediainfo.title} 未搜索到资源')": "logger.warn(f'{keyword or mediainfo.title}  No resources searched')"
"# 过滤种子": "#  Filtering seeds"
"# 取搜索优先级规则": "#  Fetch search prioritization rules"
"logger.info(f'开始过滤资源，当前规则：{priority_rule} ...')": "logger.info(f' Start filtering resources， Current rule：{priority_rule} ...')"
"logger.warn(f'{keyword or mediainfo.title} 没有符合优先级规则的资源')": "logger.warn(f'{keyword or mediainfo.title}  No resources that meet the prioritization rules')"
"# 使用默认过滤规则再次过滤": "#  Filter again using the default filtering rules"
"logger.warn(f'{keyword or mediainfo.title} 没有符合过滤规则的资源')": "logger.warn(f'{keyword or mediainfo.title}  No resources matching the filtering rules')"
"# 匹配的资源": "#  Matched resource"
"# 总数": "#  Aggregate"
"# 已处理数": "#  Number processed"
"logger.info(f'开始匹配，总 {_total} 个资源 ...')": "logger.info(f' Start matching， Assemble {_total}  Individual resource ...')"
"self.progress.update(value=0, text=f'开始匹配，总 {_total} 个资源 ...', key=ProgressKey.Search)": "self.progress.update(value=0, text=f' Start matching， Assemble {_total}  Individual resource ...', key=ProgressKey.Search)"
"text=f'正在匹配 {torrent.site_name}，已完成 {_count} / {_total} ...',": "text=f' Matching. {torrent.site_name}， Done {_count} / {_total} ...',"
"# 比对IMDBID": "#  Verify by comparingIMDBID"
"logger.info(f'{mediainfo.title} 匹配到资源：{torrent.site_name} - {torrent.title}')": "logger.info(f'{mediainfo.title}  Matching to resources：{torrent.site_name} - {torrent.title}')"
"# 识别": "#  Recognize"
"# 比对类型": "#  Type of comparison"
"logger.warn(f'{torrent.site_name} - {torrent.title} 类型不匹配')": "logger.warn(f'{torrent.site_name} - {torrent.title}  Type mismatch')"
"# 比对年份": "#  Year of comparison"
"# 剧集年份，每季的年份可能不同": "#  Year of episode， Years may vary from season to season"
"logger.warn(f'{torrent.site_name} - {torrent.title} 年份不匹配')": "logger.warn(f'{torrent.site_name} - {torrent.title}  Year mismatch')"
"# 电影年份，上下浮动1年": "#  Year of movie， Float up and down1 Surname nian"
"logger.warn(f'{torrent.site_name} - {torrent.title} 年份不匹配')": "logger.warn(f'{torrent.site_name} - {torrent.title}  Year mismatch')"
"# 比对标题和原语种标题": "#  Comparison of titles and original language titles"
"logger.info(f'{mediainfo.title} 通过标题匹配到资源：{torrent.site_name} - {torrent.title}')": "logger.info(f'{mediainfo.title}  Matching to resources by title：{torrent.site_name} - {torrent.title}')"
"# 在副标题中判断是否存在标题与原语种标题": "#  Determining the presence of a title in a subtitle with the original language title"
"logger.info(f'{mediainfo.title} 通过副标题匹配到资源：{torrent.site_name} - {torrent.title}，'": "logger.info(f'{mediainfo.title}  Matching to resources by subheading：{torrent.site_name} - {torrent.title}，'"
"f'副标题：{torrent.description}')": "f' Subheading：{torrent.description}')"
"# 比对别名和译名": "#  Comparing aliases and translations"
"logger.info(f'{mediainfo.title} 通过别名或译名匹配到资源：{torrent.site_name} - {torrent.title}')": "logger.info(f'{mediainfo.title}  Match to resource by alias or translation：{torrent.site_name} - {torrent.title}')"
"logger.warn(f'{torrent.site_name} - {torrent.title} 标题不匹配')": "logger.warn(f'{torrent.site_name} - {torrent.title}  Title mismatch')"
"text=f'匹配完成，共匹配到 {len(_match_torrents)} 个资源',": "text=f' Matching complete.， Total matches {len(_match_torrents)}  Individual resource',"
"logger.info(f"匹配完成，共匹配到 {len(_match_torrents)} 个资源")": "logger.info(f" Matching complete.， Total matches {len(_match_torrents)}  Individual resource")"
"# 去掉mediainfo中多余的数据": "#  Get rid ofmediainfo Redundant data in the"
"# 组装上下文": "#  Assembly context"
"# 排序": "#  Arrange in order"
"# 返回": "#  Come (or go) back"
"多线程搜索多个站点": "Multi-threaded search for multiple sites"
":param mediainfo:  识别的媒体信息": ":param mediainfo:   Identified media messages"
":param keywords:  搜索关键词列表": ":param keywords:   Search keyword list"
":param sites:  指定站点ID列表，如有则只搜索指定站点，否则搜索所有站点": ":param sites:   Designated siteID Listings， Search only the specified site if available， Otherwise search all sites"
":param page:  搜索页码": ":param page:   Search page"
":param area:  搜索区域 title or imdbid": ":param area:   Search area title or imdbid"
":reutrn: 资源列表": ":reutrn:  Resource list"
"# 未开启的站点不搜索": "#  Unopened sites are not searched"
"# 配置的索引站点": "#  Configured indexing sites"
"# 检查站点索引开关": "#  Check site index switch"
"# 站点流控": "#  Site flow control"
"logger.warn('未开启任何有效站点，无法搜索资源')": "logger.warn(' No active sites are turned on， Unable to search for resources')"
"# 开始进度": "#  Initiation of progress"
"# 开始计时": "#  Start counting"
"# 总数": "#  Aggregate"
"# 完成数": "#  Number of completions"
"# 更新进度": "#  Update progress"
"text=f"开始搜索，共 {total_num} 个站点 ...",": "text=f" Start searching， Common {total_num}  Stations ...","
"# 多线程": "#  Multi-threaded"
"# 搜索IMDBID": "#  Look for sth.IMDBID"
"# 搜索标题": "#  Search title"
"# 结果集": "#  Result set"
"logger.info(f"站点搜索进度：{finish_count} / {total_num}")": "logger.info(f" Site search progress：{finish_count} / {total_num}")"
"text=f"正在搜索{keywords or ''}，已完成 {finish_count} / {total_num} 个站点 ...",": "text=f" Searching{keywords or ''}， Done {finish_count} / {total_num}  Stations ...","
"# 计算耗时": "#  Computational time"
"# 更新进度": "#  Update progress"
"text=f"站点搜索完成，有效资源数：{len(results)}，总耗时 {(end_time - start_time).seconds} 秒",": "text=f" Site search complete， Number of effective resources：{len(results)}， Total time consumption {(end_time - start_time).seconds}  Unit of angle or arc equivalent one sixtieth of a degree","
"logger.info(f"站点搜索完成，有效资源数：{len(results)}，总耗时 {(end_time - start_time).seconds} 秒")": "logger.info(f" Site search complete， Number of effective resources：{len(results)}， Total time consumption {(end_time - start_time).seconds}  Unit of angle or arc equivalent one sixtieth of a degree")"
"# 结束进度": "#  Conclusion of progress"
"# 返回": "#  Come (or go) back"
"使用过滤规则过滤种子": "Filtering seeds using filter rules"
":param torrents: 种子列表": ":param torrents:  Seed list"
":param filter_rule: 过滤规则": ":param filter_rule:  Filter rules"
"# 取默认过滤规则": "#  Takes the default filtering rules"
"# 包含": "#  Encompass"
"# 排除": "#  Rule out"
"过滤种子": "Filtering seeds"
"# 包含": "#  Embody"
"logger.info(f"{t.title} 不匹配包含规则 {include}")": "logger.info(f"{t.title}  Mismatch inclusion rule {include}")"
"# 排除": "#  Rule out"
"logger.info(f"{t.title} 匹配排除规则 {exclude}")": "logger.info(f"{t.title}  Match exclusion rules {exclude}")"
"# 使用默认过滤规则再次过滤": "#  Filter again using the default filtering rules"
